--------------------------------------------------------------
13 Q0 CACM-1947 1  13.289539518252015 BM25


Object code Optimization
Methods of analyzing the control flow and dataflow of programs during compilation are applied to transforming the program to improve object time EFFICIENCY compilers , data flow analysis , dominance , EFFICIENCY , FORTRAN , graph theory , loop structure , machine instructions , object CODE , OPTIMIZATION , redundancyelimination , register assignment , System/360 Object CODE OPTIMIZATION Implementation of these and otheroptimizations in OS/360 FORTRAN H are described 

CA690102 JB February 20, 1978  12:15 PM


--------------------------------------------------------------
13 Q0 CACM-1795 2  12.787418339448362 BM25


Optimal Code for Serial and Parallel Computation
CODE OPTIMIZATION , sequencing of operations , detection of common subexpressions Optimal CODE FOR Serial and Parallel Computation 

CA691217 JB February 15, 1978  1:59 PM


--------------------------------------------------------------
13 Q0 CACM-2495 3  12.560033334460437 BM25


Adapting Optimal Code Generation for ArithmeticExpressions to the Instruction Sets Available on Present-Day Computers
arithmetic expressions , CODE generation , compilers , object-code OPTIMIZATION , register assignment , trees Adapting Optimal CODE Generation FOR ArithmeticExpressions to the Instruction Sets Available on Present-Day Computers 

CA730605 JB January 23, 1978  2:24 PM


--------------------------------------------------------------
13 Q0 CACM-2897 4  12.480898619565508 BM25


A Case Study of a New Code Generation Technique for Compilers
Each step expands higher level statements into blocks oflower level CODE and then performs optimizations on the result Each statement has only one possibleexpansion-the task of tailoring this CODE to take advantage of any special cases is done by the optimizations A set of fairlysimple optimizations was identified which allow the compiler to produce good CODE More elaborate optimizationscan further improve the object CODE FOR most contexts of the concatenate statement , the codeproduced by a compiler using the expansion-optimization strategy described above compares favorably with thecode produced by a conventional PL/I optimizing compiler compiler structure , optimizing compiler , codegeneration , PL/I compiler , concatenation , program OPTIMIZATION , OPTIMIZATION techniques , data flow analysis A Case Study of a New CODE Generation Technique FOR Compilers Such a compiler translates the parsed source CODE intolower level CODE by a sequence of steps This paper provides evidence that this strategy can indeed result in good object CODE 

CA771203 JB February 1, 1980  3:54 AM


--------------------------------------------------------------
13 Q0 CACM-3080 5  10.999942425170815 BM25


Proving the Correctness of Heuristically Optimized Code 
A primary use ofthe system is as a post OPTIMIZATION step in CODE generation The examples demonstrate that OPTIMIZATION of the genre of this paper can resultin substantially faster operation and the saving of memory in terms of program and stack sizes Compilers , correctness , CODE OPTIMIZATION , debugging , program verification , Lisp Proving the Correctness of Heuristically Optimized CODE The low level language programs need notbe generated by a compiler and in fact could be hand coded 

CA780708 DH February 7, 1979  3:53 PM


--------------------------------------------------------------
13 Q0 CACM-3054 6  10.406507532846941 BM25


Implementing Quicksort Programs
This paper is a practical study of how toimplement the Quicksort sorting algorithm and its best variants on real computers , including how to applyvarious CODE OPTIMIZATION techniques Quicksort , analysis of algorithms , CODE OPTIMIZATION , sorting 

CA781007 DH January 29, 1979  5:40 PM


--------------------------------------------------------------
13 Q0 CACM-2904 7  10.275249289321078 BM25


An Algorithm for Reduction of Operator Strength
These algorithms should fit well into anintegrated package of local OPTIMIZATION algorithms compilers , OPTIMIZATION of compiled CODE , program analysis , operator strength reduction , test replacement , strongly connected region 

CA771112 JB December 27, 1977  6:34 AM


--------------------------------------------------------------
13 Q0 CACM-2253 8  9.422721419207294 BM25


Index Ranges for Matrix Calculi
This scheme attempts program optimizationby transforming the original algorithm rather than the machine CODE address calculations , algorithm transformation , compilation , data structures , indexing by name , indexing by position , index domain , index map , indexrange , matrix expressions , normal form , programming languages , program OPTIMIZATION , range operations , symbolicmanipulation , syntactic analysis , well-formed expressions The goal is to automaticallygenerate CODE FOR handling the tedious address calculations necessitated by complicated data structures 

CA721202 JB January 27, 1978  1:12 PM


--------------------------------------------------------------
13 Q0 CACM-2929 9  8.85725702165443 BM25


An Analysis of Inline Substitution for a Structured Programming Language
An OPTIMIZATION technique known as inline substitutionis analyzed The OPTIMIZATION consists of replacing a procedure invocation by a modified copyof the procedure body inline substitution , open coding , open compilation , program OPTIMIZATION , compilers , structured programming languages , run-time statistics Preliminary results FOR theCLU structured programming language indicate that , in programs with a low degree of recursion , over 90percent of all procedure calls can be eliminated , with little increase in the size of compiled CODE and asmall savings in execution time 

CA770905 JB December 27, 1977  1:23 PM


--------------------------------------------------------------
13 Q0 CACM-1886 10  8.657002679577513 BM25


Generation of Optimal Code for Expressions via Factorization
Given a set of expressions which are to becompiled , methods are presented FOR increasing the EFFICIENCY of the object CODE produced by first factoringthe expressions , i factorization algorithms , CODE OPTIMIZATION , sequencingof operations , detection of common subexpressions , factorization of Boolean expressions Generation of Optimal CODE FOR Expressions via Factorization 

CA690607JB February 17, 1978  10:57 AM


--------------------------------------------------------------
13 Q0 CACM-2464 11  8.541606312973672 BM25


The Complex Method for Constrained Optimization [E4] (Algorithm A454)
The Complex Method FOR Constrained OPTIMIZATION [ E4 ] ( Algorithm A454 ) OPTIMIZATION , constrained OPTIMIZATION , Box 's algorithm 

CA730810 JB January 23, 1978  10:34 AM


--------------------------------------------------------------
13 Q0 CACM-1564 12  8.232015960121265 BM25


Description of Basic Algorithm in DETAB/65 Preprocessor
The only OPTIMIZATION attempted is the elimination of obviously unnecessarytests on certain conditions in the decision table The basic algorithm FOR the conversion of decisiontables into COBOL CODE is contained in thegenerator portion of the DETAB/65 preprocessor Core storage issaved by using queueing techniques and extensive indexing and also by outputting the CODE as it is generated , a line at a time 

CA670709 JB February 28, 1978  8:33 AM


--------------------------------------------------------------
13 Q0 CACM-2944 13  8.036339674104944 BM25


Shifting Garbage Collection Overhead to Compile Time
This information is used to find actions that cancel when the CODE is executedand those that can be grouped to achieve improved EFFICIENCY Implementing the described optimizations requires global flow analysis to be performed on thesource program garbage collection , global flow analysis , list processing , OPTIMIZATION , reference counts , storage management 

CA770708 JB December 28, 1977  8:38 AM


--------------------------------------------------------------
13 Q0 CACM-2491 14  7.772909943111301 BM25


Threaded Code
Extensions and optimizations are mentioned interpreter , machine CODE , time tradeoff , spacetradeoff , compiled CODE , subroutine calls , threaded CODE Threaded CODE The concept of `` threaded CODE '' is presented asan alternative to machine language CODE In softwareit is realized as interpretive CODE not needing an interpreter 

CA730609 JB January 23, 1978  2:05 PM


--------------------------------------------------------------
13 Q0 CACM-1807 15  7.627668584898615 BM25


Optimization of Expressions in Fortran
OPTIMIZATION of Expressions in Fortran FORTRAN , OPTIMIZATION , expressions , compilers , compilation , subscripts , register allocation , DO loops , common subexpressions , invariant calculations Ithas been used in the development of several FORTRAN compilers that have proved to produce excellent objectcode without significantly reducing the compilation speed 

CA691205 JB February 15, 1978  4:16 PM


--------------------------------------------------------------
13 Q0 CACM-2835 16  7.577531055613993 BM25


Recursion Analysis for Compiler Optimization
Recursion Analysis FOR Compiler OPTIMIZATION A relatively simple method FOR the detectionof recursive use of procedures is presented FOR use in compiler OPTIMIZATION Implementation considerationsare discussed , and a modification of the algorithm is given to further improve OPTIMIZATION recursion , compiler OPTIMIZATION 

CA760904 JB January 4, 1978  9:36 AM


--------------------------------------------------------------
13 Q0 CACM-2748 17  7.556492750806123 BM25


Indirect Threaded Code
It is related to Bell 's notion of threaded CODE but requires less SPACE and is moreamenable to machine independent implementations Indirect Threaded CODE An efficient arrangement FOR interpretive codeis described threaded CODE , SNOBOL4 , interpretors , CODE generation 

CA750605 JB January 9, 1978  1:11 PM


--------------------------------------------------------------
13 Q0 CACM-1231 18  7.537324928944536 BM25


Peephole Optimization
Peephole OPTIMIZATION Redundant instructions may be discarded duringthe final stage of compilation by using a simple optimizing technique called peephole OPTIMIZATION 

CA650704 JB March 6, 1978  9:05 PM


--------------------------------------------------------------
13 Q0 CACM-1223 19  7.482714231453758 BM25


High Speed Compilation of Efficient Object Code
OPTIMIZATION such as the effective use of index registers , although as important , is not discussed sincethe object CODE which would be most efficient is highly machine dependent High Speed Compilation of Efficient Object CODE 

CA650801 JB March 6, 1978  8:45 PM


--------------------------------------------------------------
13 Q0 CACM-2423 20  7.285624522555527 BM25


A Parser-Generating System for Constructing Compressed Compilers
parser generators , translator writing systems , syntactic analysis , normal-form grammars , pushdown automata , translation grammars , translator OPTIMIZATION , compression algorithm The PGS is a Fortran-coded compiler In the input translation grammar , each BNF syntactic rule corresponds to a ( possibly empty ) `` codegenerator '' realizable as an assembly language , Fortran or Algol , subroutine that is called wheneverthat syntactic rule is applied in the parse of a program FOR an XPL compiler , the parserprogram and its tables currently occupy 288 words of 60-bit core memory of which 140 words are parsingtable entries and 82 words are links to CODE generators 

CA731103 JB January 20, 197810:41 AM


--------------------------------------------------------------
13 Q0 CACM-1655 21  6.9989081513385925 BM25


Code Extension Procedures for InformationInterchange* (Proposed USA Standard)
CODE Extension Procedures FOR InformationInterchange* ( Proposed USA Standard ) standard CODE , CODE , information interchange , characters , shift out , shift in , escape , data link escape , control functions , standard procedures , CODE extension , CODE table , bit pattern 

CA681211 JB February 21, 1978  12:16 PM


--------------------------------------------------------------
13 Q0 CACM-1362 22  6.975096706686405 BM25


Code Extension in ASCII* (An ASA Tutorial)
CODE Extension in ASCII* ( An ASA Tutorial ) The American Standard CODE FOR InformationInterchange ( ASCII ) contains a number of control characters associated with the principle of CODE extension , that is , with the representation of information which can not be directly represented by means of the charactersin the CODE This paper presents a set of mutually consistent philosophies regarding CODE extension applications , and suggests a corollary set of doctrines FOR the application of the CODE extension characters Distinctionsare drawn between CODE extension and such other concepts as `` graphic substitution '' or `` syntacticrepresentation '' which are often used to meet similar requirements Also covered are certain topics whichare not truly concerned with CODE extension but which are often linked with it in discussion on CODE applications The material in this paper is equally applicable in principle to the ( proposed ) ISO international7-bit CODE FOR information interchange 

CA661005 JB March 2, 1978  4:02 PM


--------------------------------------------------------------
13 Q0 CACM-0048 23  6.922247786795151 BM25


Shift-Register Code for Indexing Applications
Shift-Register CODE FOR Indexing Applications In this communication the use of a shift-registercode with n = 10 is described FOR calling 64 wireless telemetering stations in a fixed cyclical order A high degree of redundancy is used , permitting a single-error correcting CODE ( `` minimum-distance-three '' CODE ) with 64 10-bit CODE words to be employed as the station identification CODE Embedding this inthe shift-register CODE with period 1023 permits the CODE to be employed without punctuation , each ofthe telemetering station receivers simply putting received ones and zeros into a shift register Eachtime the given CODE combination arises identifying the particular station ( barring FOR tuitous error combinationsof very low probability ) it has been called The communication describes the properties and applicationof the CODE in some detail and the finding of the particular example to be employed on URAL , theSoviet-built drum computer donated to the Indian Statistical Institute by the United NationsTechnical Aid Administration ( UNTAA ) 

CA591011 JB March 22, 1978  4:07 PM


--------------------------------------------------------------
13 Q0 CACM-2701 24  6.920909211638603 BM25


A Fast and Usually Linear Algorithm for GlobalFlow Analysis (Abstract only--Complete paper JACM 23,1 January, 1976)
global flow analysis , data flow , CODE OPTIMIZATION , common subexpression elimination , live-dead analysis , information propagation , flow graph , reducibility , go-to-less programming , depth-first search , path compression The algorithm is shown to treat a very general class of function spaces The algorithm can be extended to yet larger classes of function spaces and graphs by relaxingthe time bound Examples are given of CODE improvement problems which can be solved using the algorithm 

CA751206 JB January 5, 1978  4:08 PM


--------------------------------------------------------------
13 Q0 CACM-3053 25  6.774991805658906 BM25


Packed Scatter Tables
The displacements are depth-limited approximations to an enumerative ( exhaustive ) OPTIMIZATION , although packing costs remain linear-O ( n ) -with table size n The techniques areprimarily suited FOR important fixed ( but possibly quite large ) tables FOR which reference frequencies maybe known : op-code tables , spelling dictionaries , access arrays 

CA781008 DH January 29, 1979  5:30 PM


--------------------------------------------------------------
13 Q0 CACM-2611 26  6.711143319138263 BM25


The Complex Method for Constrained Optimization (Algorithm R454)
The Complex Method FOR Constrained OPTIMIZATION ( Algorithm R454 ) 

CA740813 JB January 17, 1978  9:28 AM


--------------------------------------------------------------
13 Q0 CACM-2616 27  6.687200592701916 BM25


On the Conversion of Programs to Decision Tables: Method and Objectives
Objectives of these conversions are mainly program debugging and optimizationin practice decision tables , program OPTIMIZATION , debugging , semantics , theory of programming , systems analysis 

CA740808 JB January 17, 1978  9:43 AM


--------------------------------------------------------------
13 Q0 CACM-2858 28  6.633638038827422 BM25


A Process for the Determination ofAddresses in Variable Length Addressing
The algorithm is suitable FOR arbitraryprogram structure and a choice of OPTIMIZATION criteria This may be , FOR example , achieving the smallest number of long instructions , in which case the total CODE length is minimized , orminimizing the assigned address of a specified point in the program 

CA760604 JB January 4, 1978  2:09 PM


--------------------------------------------------------------
13 Q0 CACM-1652 29  6.387697343240093 BM25


A Code for Non-numeric Information ProcessingApplications in Online Systems
A CODE FOR Non-numeric Information ProcessingApplications in Online Systems A CODE has been specifically designed to simplifythe internal information processing operations within an online computer system with respect to non-numericapplications , and to maximize the transfer rate of the information channel linking the system andthe system user The CODE has direct application to problems in area such as information retrieval , documentclassification , computer-aided teaching and text editing This CODE , called IPC ( Information ProcessingCode ) , is an 8-bit CODE set constructed so that 7 , 6 , 5 and 4-bit subsets can be easily derivedfrom the basic set The CODE set is organized so that simple binary operations can distinguish betweenthe numeric alphabetic , special symbol and control character codes The number of usable characters withinthe basic set size may be expanded either by use of escape codes included in the set , or by suitableinterpretation of otherwise unassigned codes on the basis of the requirements of local environments 

CA670103 JB March 1, 1978  9:05 AM


--------------------------------------------------------------
13 Q0 CACM-2964 30  6.259552234139554 BM25


An Approach to Optimal Design of Storage Parameters in Databases
database organization , storage parameteroptimization , resident , overflow storage 

CA770508 JB December 29, 1977  1:48 AM


--------------------------------------------------------------
13 Q0 CACM-2834 31  6.258395259154936 BM25


Efficient Generation of the BinaryReflected Gray Code and Its Applications
Efficient Generation of the BinaryReflected Gray CODE and Its Applications Algorithms are presented to generate the n-bitbinary reflected Gray CODE and codewords of fixed weight in that CODE Gray CODE , combinations , subsets , compositions , combinatorial computing 

CA760905 JB January 4, 1978  9:14 AM


--------------------------------------------------------------
13 Q0 CACM-2107 32  6.23087528735483 BM25


The Quadratic Quotient Method: A HashCode Eliminating Secondary Clustering
Secondary clustering as a cause of hash CODE inefficiency is discussed , and a new hashing method based on its elimination is presented The Quadratic Quotient Method : A HashCode Eliminating Secondary Clustering hashing , hash CODE , scatter storage , calculated address , clustering , search , symbol table , collisions , keys , table look-up 

CA700208 JB February 14, 1978  10:18 AM


--------------------------------------------------------------
13 Q0 CACM-2836 33  6.215052523898549 BM25


Weighted Derivation Trees
The method may be applied to problemsinvolving probabilistic parsing or combinatorial OPTIMIZATION derivation tree , parse tree , probabilistic grammar , structural ambiguity , combinatorial OPTIMIZATION 

CA760903 JB January 4, 1978  9:41 AM


--------------------------------------------------------------
13 Q0 CACM-1992 34  6.164974051970368 BM25


Comment on Bell's Quadratic Quotient Method for Hash Code Searching
Comment on Bell 's Quadratic Quotient Method FOR Hash CODE Searching hashing , hash CODE , scatter storage , calculated address , clustering , search , symbol table , keys , table look-up 

CA700913 JB February 10, 1978  9:56 AM


--------------------------------------------------------------
13 Q0 CACM-2344 35  6.153402662484493 BM25


On the Optimization of Performance of Time-Sharing Systems by Simulation
On the OPTIMIZATION of Performance of Time-Sharing Systems by Simulation The effects of these variations on a measure of system performance is used to ascertain whichof the parameters controllable by the job-scheduling algorithm , including the scheduling itself , require OPTIMIZATION , and which of the parameters not normally controllable by the scheduling algorithm have a markedeffect on system performance It appears that thesefeatures would benefit from OPTIMIZATION whereas other parameters controllable by the scheduling algorithmaffect system performance in a predictable manner and would not benefit from OPTIMIZATION time-sharing , simulation studies , OPTIMIZATION , measure of performance , scheduling algorithms 

CA720601 JB January 31, 1978  9:19 AM


--------------------------------------------------------------
13 Q0 CACM-1676 36  6.1268560894204205 BM25


The LRLTRAN Compiler
Machine-independent OPTIMIZATION occurs in pass IIand DO-loop and machine-dependent OPTIMIZATION in pass III compiler , compiler-compiler , machine independence , scatter storage technique , Polish processor , common subsegments , tree representation , OPTIMIZATION 

CA681103 JB February 21, 1978  3:03 PM


--------------------------------------------------------------
13 Q0 CACM-2433 37  6.071941392530536 BM25


Control Structures in Illiac IV Fortran
The implications of these features fordata layout and algorithm structure are discussed , and the conclusion is drawn that data allocation rather thancode structuring is the crucial ILLIAC OPTIMIZATION problem 

CA731007 JB January 20, 1978  11:30 AM


--------------------------------------------------------------
13 Q0 CACM-2133 38  6.063519670047413 BM25


Algorithm for the Assignment Problem(Rectangular Matrices) [H] (Algorithm 415)
operations research , OPTIMIZATION theory , assignment problem , rectangular matrices 

CA711210 JB February 2, 1978  9:38 AM


--------------------------------------------------------------
13 Q0 CACM-2533 39  6.023407444167374 BM25


Gray Code and the +- Sign Sequence when+-f (+-f(+-f(...+-f(x)...))) Is Ordered
Gray CODE and the +- Sign Sequence when+-f ( +-f ( +-f ( Gray CODE , sign sequences , ordering , positivemonotonic functions , binary system , Galois sum 

CA730306 JB January 24, 1978  10:35 AM


--------------------------------------------------------------
13 Q0 CACM-1756 40  5.998618160165327 BM25


Hollerith Punched Card Code* (Proposed USA Standard)
Hollerith Punched Card Code* ( Proposed USA Standard ) USA Standard , card CODE , punched card , punched cardcode , hole-patterns , hole-patterns assignment , punched card systems 

CA680414 JB February 23, 1978  10:14 AM


--------------------------------------------------------------
13 Q0 CACM-3066 41  5.867872896408026 BM25


A Controlled Experiment in Program Testingand Code Walkthroughs/Inspections
A Controlled Experiment in Program Testingand CODE Walkthroughs/Inspections The results show that the popular CODE walk through/inspection method was as effectiveas other computer-based methods in finding errors and that the most effective methods ( in terms oferrors found and cost ) employed pairs of subjects who tested the program independently and then pooledtheir findings Software reliability , program verification , debugging , testing , CODE walkthroughs , CODE inspections , personnel selection 

CA780906 DH February 5, 1979  10:47 AM


--------------------------------------------------------------
13 Q0 CACM-2290 42  5.809748663254012 BM25


Immediate Predominators in a Directed Graph [H] (Algorithm A430)
predominator , immediate predominator , graph theory , directed graph , shortest path , articulation , connectivity , program OPTIMIZATION , optimizing compiler 

CA720812 JB January 30, 1978  9:19 AM


--------------------------------------------------------------
13 Q0 CACM-1651 43  5.788993512867798 BM25


An Interpretive Input Routine for Linear Programming
This latter ( limited ) use derives not at all from inherent limitations in the CODE itself , but from an EFFICIENCY evaluation : large LP problems would doubtless benefit from an input system more suited FOR bulk data handling thanthe input CODE described In this descriptive article an input codeis presented which greatly simplifies data input to any linear programming solution routine , FOR subsequentuse either as a pedagogical device or FOR solving rather small LP problems 

CA670104 JB March 1, 1978  8:58 AM


--------------------------------------------------------------
13 Q0 CACM-0031 44  5.7804258717376324 BM25


IBM 704 Code-Nundrums
IBM 704 Code-Nundrums 

CA580301 JB March 22, 1978  9:21 PM


--------------------------------------------------------------
13 Q0 CACM-0195 45  5.734938679088139 BM25


What is a Code?
What is a CODE ? 

CA600502 JB March 22, 1978  1:33 PM


--------------------------------------------------------------
13 Q0 CACM-0797 46  5.703795792010025 BM25


American Standard Code for Information Interchange
American Standard CODE FOR Information Interchange 

CA630801 JB March 13, 1978  8:55 PM


--------------------------------------------------------------
13 Q0 CACM-1757 47  5.662740940440449 BM25


Data Code for Calendar Date for Machine-to-MachineData Interchange* (Proposed USA Standard)
Data CODE FOR Calendar Date FOR Machine-to-MachineData Interchange* ( Proposed USA Standard ) USA Standard , data CODE , calendar date , machine-to-machinedata interchange , recording calendar date , data group identifier 

CA680413 JB February 23, 1978  10:18 AM


--------------------------------------------------------------
13 Q0 CACM-2680 48  5.656159433746809 BM25


Optimal Space Allocation on Disk Storage Devices
An OPTIMIZATION model FOR the assignment of files to disk packs , and packs to eitherresident or nonresident status is presented disk analysis , disk OPTIMIZATION , disk files , filesystems , file scheduling , SPACE allocation , memory hierarchy Optimal SPACE Allocation on Disk Storage Devices When the amount of SPACE required FOR file storageexceeds the amount which can be kept on-line , decisions must be made as to which files are to be permanentlyresident and which mountable 

CA740303 JB January 18, 1978  12:32 PM


--------------------------------------------------------------
13 Q0 CACM-2537 49  5.63440030911751 BM25


Common Phrases and Minimum-Space Text Storage
The storage technique gives rise to a mathematical OPTIMIZATION problem : determine how each message shoulduse the available phrases to minimize its storage requirement diagnostic messages , error messages , common phrases , minimum SPACE , text storage , OPTIMIZATION , dynamic programming Common Phrases and Minimum-Space Text Storage A method FOR saving storage SPACE FOR textstrings , such as compiler diagnostic messages , is described 

CA730302 JB January 24, 1978  1:12 PM


--------------------------------------------------------------
13 Q0 CACM-2411 50  5.625986688002503 BM25


Tree-Structured Programs
control structures , flowcharts , goto statements , inductive assertion , least fix points , OPTIMIZATION in compilers , program documentation , program flow graphs , programming language design , proof of programs , semantics of programming languages , structured programming 

CA731115 JB January 19, 1978  4:19 PM


--------------------------------------------------------------
13 Q0 CACM-1289 51  5.6147283256207645 BM25


Proposed Revised American Standard Code for Information Interchange
Proposed Revised American Standard CODE FOR Information Interchange 

CA650402 JB March 7, 1978  4:03 PM


--------------------------------------------------------------
13 Q0 CACM-0230 52  5.571229634023986 BM25


A Proposal for Character Code Compatibility
A Proposal FOR Character CODE Compatibility 

CA600202 JB March 22, 1978  2:25 PM


--------------------------------------------------------------
13 Q0 CACM-1064 53  5.571229634023986 BM25


Perforated Tape Code for InformationInterchange (Proposed American Standard)
Perforated Tape CODE FOR InformationInterchange ( Proposed American Standard ) 

CA640603 JB March 9, 1978  9:46 PM


--------------------------------------------------------------
13 Q0 CACM-1187 54  5.559930380430459 BM25


Note on an ASCII-Octal Code Table (Standards)
Note on an ASCII-Octal CODE Table ( Standards ) 

CA651008 JB March 6, 1978  6:42 PM


--------------------------------------------------------------
13 Q0 CACM-1670 55  5.5515073451092185 BM25


Correspondences of 8-Bit and Hollerith Codes forComputer Environments (A USASI Tutorial Standard)
Correspondences of 8-Bit and Hollerith Codes forComputer Environments ( A USASI Tutorial Standard ) USA standard , card CODE , punched card , punched cardcode , hole-patterns , hole-patterns assignment , punched card systems 

CA681109 JB February 21, 1978  2:33 PM


--------------------------------------------------------------
13 Q0 CACM-1414 56  5.486223370292077 BM25


Twelve-Row Punched-Card Code for InformationInterchange* (Proposed American Standard)
Twelve-Row Punched-Card CODE FOR InformationInterchange* ( Proposed American Standard ) 

CA660607 JB March 3, 1978  8:39 AM


--------------------------------------------------------------
13 Q0 CACM-1232 57  5.476371470089142 BM25


Representation of the Standard ECMA 7-BitCode in Punched Cards (ECMA Standard)
Representation of the Standard ECMA 7-BitCode in Punched Cards ( ECMA Standard ) 

CA650703 JB March 6, 1978  9:06 PM


--------------------------------------------------------------
13 Q0 CACM-0066 58  5.387320110228528 BM25


A Proposal for a Generalized Card Code for 256 Characters
A Proposal FOR a Generalized Card CODE FOR 256 Characters 

CA590903 JB March 22, 1978  4:50 PM


--------------------------------------------------------------
13 Q0 CACM-1275 59  5.363469016666721 BM25


Code Structures for Protection and Manipulationof Variable Length Items (Corrigendum)
CODE Structures FOR Protection and Manipulationof Variable Length Items ( Corrigendum ) 

CA650416 JB March 7, 1978  3:31 PM


--------------------------------------------------------------
13 Q0 CACM-1973 60  5.339391500514973 BM25


The Linear Quotient Hash Code
The Linear Quotient Hash CODE hashing , hash CODE , scatter storage , calculatedaddress , search , table , lookup , symbol table , keys 

CA701105 JB February 10, 1978  8:33 AM


--------------------------------------------------------------
13 Q0 CACM-0333 61  5.278064439644887 BM25


Design of an Improved* Transmission/Data Processing Code
Design of an Improved* Transmission/Data Processing CODE 

CA610501 JB March 16, 1978  11:14 PM


--------------------------------------------------------------
13 Q0 CACM-1066 62  5.241457253205322 BM25


Growing Applications of Linear Programming
Use of linear programming models has grown soextensively in recent years that the whole concept FOR organizing a computer CODE has undergone a radicalchange the simplex method ) toa computer CODE An advanced CODE must cope with such a variety of situations that the respective computersubprograms must be organized into an integrated system Someof the components of such a system are : translation of problem statement in terms of basic data to linearprogramming matrix coefficients , data transmission FOR direct computer entry , data file at the computer center , data processing and editing prior to solving the simplex algorithm , an efficient and reliable codefor solving the above-mentioned algorithm , and flexible means FOR summarizing the results 

CA640601 JB March 9, 1978  9:55 PM


--------------------------------------------------------------
13 Q0 CACM-1065 63  5.17064681320083 BM25


Bit Sequencing of the American Standard Code forInformation Interchange (ASCII) in Serial-by-Bit Data Transmission (Proposed American Standard)
Bit Sequencing of the American Standard CODE forInformation Interchange ( ASCII ) in Serial-by-Bit Data Transmission ( Proposed American Standard ) 

CA640602 JB March 9, 1978  9:47 PM


--------------------------------------------------------------
13 Q0 CACM-3083 64  5.138703230028461 BM25


Pseudochaining in Hash Tables
The EFFICIENCY of the method is derived and a tradeoff analysis is given Hash CODE , scatter storage , open addressing , chaining , pseudochaining , collision resolution , searching , uniform probing 

CA780705 DH February 7, 1979  4:37 PM


--------------------------------------------------------------
13 Q0 CACM-2586 65  5.1337342127982195 BM25


Adapting Optimal Code Generation for ArithmeticExpressions to the Instruction Sets Available on Present-Day Computers (Errata)
Adapting Optimal CODE Generation FOR ArithmeticExpressions to the Instruction Sets Available on Present-Day Computers ( Errata ) 

CA741012 JB January 16, 1978  11:05 AM


--------------------------------------------------------------
13 Q0 CACM-3173 66  5.078919152527437 BM25


A Psychology of Learning BASIC
This paper addresses the question : What does a person knowfollowing learning of BASIC programming ? Several underlying conceptualstructures are identified : ( 1 ) a transaction is an event thatoccurs in the computer and involves some operation on some objectat some location , ( 2 ) a prestatement is a set of transactions correspondingto a line of CODE , ( 3 ) chunks are frequently occurring configurations of prestatements corresponding to several lines of CODE 

CA791101 DB January 17, 1980  10:38 AM


--------------------------------------------------------------
13 Q0 CACM-1786 67  5.048868481504767 BM25


An Improved Hash Code for Scatter Storage
An Improved Hash CODE FOR Scatter Storage hash CODE , hash table , scatter storage , searching 

CA680108 JB February 23, 1978  2:31 PM


--------------------------------------------------------------
13 Q0 CACM-1204 68  5.043963471873433 BM25


Character Structure and Character Parity Sense forSerial-by-Bit Data Communication in the American Standard Code for Information Interchange (Proposed American Standard)
Character Structure and Character Parity Sense forSerial-by-Bit Data Communication in the American Standard CODE FOR Information Interchange ( Proposed American Standard ) 

CA650902 JB March 6, 1978  7:41 PM


--------------------------------------------------------------
13 Q0 CACM-2552 69  5.023398491534992 BM25


A Note on When To Chain Overflow Items Within a Direct-Access Table
hash CODE , open hash , chaining , information retrieval , collision 

CA730109 JB January 24, 1978  4:07 PM


--------------------------------------------------------------
13 Q0 CACM-2716 70  4.951882237745388 BM25


Optimizing the Performance of a Relational Algebra Database Interface
SQUIRAL seeks to minimize query response time and SPACE utilization by : ( 1 ) performingglobal query OPTIMIZATION , ( 2 ) exploiting disjoint and pipelined concurrency , ( 3 ) coordinating sort ordersin temporary relations , ( 4 ) employing directory analysis , and ( 5 ) maintaining locality in page references relational database , database OPTIMIZATION , invertedfile , automatic programming , query language , data manipulation language , very high level language 

CA751003 JB January 6, 1978  11:19 AM


--------------------------------------------------------------
13 Q0 CACM-3125 71  4.941022184923768 BM25


Global Optimization by Suppression of Partial Redundancies
Global OPTIMIZATION by Suppression of Partial Redundancies Optimizer , OPTIMIZATION , compiler , compilation , redundancy elimination , invariant computation elimination , partial redundancy , data flow analysis , Boolean systems 

CA790204 DH April 10, 1979  4:19 PM


--------------------------------------------------------------
13 Q0 CACM-0693 72  4.885013276458825 BM25


An Extension of Fibonaccian Search To Several Variables
A technique which uses Fibonaccian searchconcepts has been developed to solve OPTIMIZATION problems involving unimodal functions of several variables 

CA631032 JB March 13, 1978  4:19 PM


--------------------------------------------------------------
13 Q0 CACM-0093 73  4.8563814200258895 BM25


From Formulas to Computer Oriented Language
A technique is shown FOR enabling a computerto translate simple algebraic formulas into a three address computer CODE 

CA590303 JB March 22, 1978  8:03 PM


--------------------------------------------------------------
13 Q0 CACM-2559 74  4.7952006380635375 BM25


The Reallocation of Hash-Coded Tables
The EFFICIENCY of the technique is discussed and theoretical statistics are given When the SPACE allocation FOR a hash-coded tableis altered , the table entries must be rescattered over the new SPACE The Reallocation of Hash-Coded Tables Moreover , it can be used to eliminate previously flagged deletions from any hash-coded table , or to changefrom one hashing method to another reallocation , dynamic storage , hash CODE , scatter storage , deletions 

CA730102 JB January 24, 1978  4:50 PM


--------------------------------------------------------------
13 Q0 CACM-1331 75  4.735795963412635 BM25


Code Structures for Protection and Manipulation of Variable-Length Items
CODE Structures FOR Protection and Manipulation of Variable-Length Items A 6-bit CODE assignmentof alphanumeric characters FOR fixed word-length computers is given and its suitability FOR error detectionand variable-length item manipulation is shown 

CA650106 JB March 8, 1978  2:48 PM


--------------------------------------------------------------
13 Q0 CACM-1523 76  4.692391107608623 BM25


SHARER, a Time Sharing System for the CDC 6600
No attempt was made to use reentrant CODE , or to simulate segmentation or paging Implementationtime was approximately six man-years , with the majority of the CODE being written in FORTRAN 

CA671011 JB February 27, 1978 1:53 PM


--------------------------------------------------------------
13 Q0 CACM-3175 77  4.6743703700790435 BM25


Breaking Substitution Ciphers Using a Relaxation Algorithm
Substitution ciphers are codes in which each letterof the alphabet has one fixed substitute , and the word divisions do not change Every CODE letter is assigned probabilities of representing plain textletters These probabilities are updated in parallel FOR allcode letters , using joint letter probabilities 

CA791103 DB January 23, 1980  11:15 AM


--------------------------------------------------------------
13 Q0 CACM-3018 78  4.630693479923872 BM25


Covering Edges by Cliques with Regard toKeyword Conflicts and Intersection Graphs
Kellerman has presented a method FOR determiningkeyword conflicts and described a heuristic algorithm which solves a certain combinatorial optimizationproblem in connection with this method This OPTIMIZATION problem is here shown to be equivalentto the problem of covering the edges of a graph by complete subgraphs with the objective of minimizingthe number of complete subgraphs 

CA780205 JB March 28, 1978  4:18 PM


--------------------------------------------------------------
13 Q0 CACM-2888 79  4.627437205914875 BM25


Information Reference Coding
Items in business systems have to be identifiedby reference codes , which can later be used as data codes and file keys in an associated data processingsystem In business systems associated with large collections of integrated files ( database ) it is vital to assign codes in a methodical way so as to control future extension and changes while maintainingcorrect program action The principles of methodical coding are discussed , and the way inwhich logical connections between data items must be reflected in the reference CODE framework is shownthrough a set-theoretic information model data , file , reference CODE , systemsanalysis , information modeling , database 

CA760105 JB January 5, 1978  10:11 AM


--------------------------------------------------------------
13 Q0 CACM-2195 80  4.617953210739094 BM25


On the Optimal Detection of Curves in Noisy Pictures
The relationbetween the structure of the figure of merit and the complexity of the OPTIMIZATION process is then discussed picture processing , picture recognition , picturedescription , curve detection , line detection , edge detection , optimal detection , heuristic methods , global recognition , parallel processing , dynamic programming , interaction graph , secondary OPTIMIZATION problem 

CA710504 JB February 3, 1978  2:49 PM


--------------------------------------------------------------
13 Q0 CACM-1345 81  4.4923305086473215 BM25


Tensor Calculations on the Computer
Using this CODE , Christoffel symbolshave been calculated FOR 12 basic orthogonal coordinate systems 

CA661205 JB March 2, 1978  2:35 PM


--------------------------------------------------------------
13 Q0 CACM-3110 82  4.400577317750204 BM25


Assembling Code for Machines with Span-Dependent Instructions
Assembling CODE FOR Machines with Span-Dependent Instructions Span-dependent instructions , variable-length addressing , CODE generation , assemblers , compilers , NP-complete , computational complexity 

CA780406 DH February 26, 1979  3:49 PM


--------------------------------------------------------------
13 Q0 CACM-2801 83  4.390478932462603 BM25


Storage-Efficient Representation of Decimal Data
In over half of the cases the compressed CODE results from the conventionalBCD CODE by simple removal of redundant 0 bits binary-coded decimal digits , decimal data storage 

CA750110 JB January 12, 1978  9:42 AM


--------------------------------------------------------------
13 Q0 CACM-2812 84  4.3898638726136365 BM25


Computer-Aided Analysis and Design of Information Systems
The analyzed problem statement was translated to the form necessary FOR use by theSODA ( Systems OPTIMIZATION and Design Algorithm ) program FOR the generation of alternative specificationsof program modules and logical database structures computer-aided analysis , information systems , logicalsystem design , problem statement language , problem statement analyzer , physical system design , accurately defined systems , systems OPTIMIZATION and design algorithm 

CA761203 JB January 3, 1978  2:31 PM


--------------------------------------------------------------
13 Q0 CACM-3171 85  4.3809872579775835 BM25


Line Numbers Made Cheap
Under suitablecircumstances , this method requires absolutely no overhead , in either time or SPACE , during execution of the program Line number administration , diagnostic messages , abstract machine CODE 

CA791004 DB January 17, 1980  9:57 AM


--------------------------------------------------------------
13 Q0 CACM-2953 86  4.2536510610407685 BM25


Notes on Recursion Elimination
recursion elimination , OPTIMIZATION of programs , stacks , trees , sorting algorithms , computational induction 

CA770610 JB December 28, 1977  12:50 PM


--------------------------------------------------------------
13 Q0 CACM-2134 87  4.238053617385331 BM25


An Extension of the Munkres Algorithm forthe Assignment Problem to Rectangular Matrices
operations research , OPTIMIZATION theory , assignmentproblem , rectangular matrices , algorithm 

CA711209 JB February 2, 1978  9:46 AM


--------------------------------------------------------------
13 Q0 CACM-3005 88  4.221230455777881 BM25


Implications of Structured Programming for Machine Architecture
As a consequence , instruction decoding time is minimized , and the machine isefficient with respect to both SPACE and time Unlike a Huffman CODE , which utilizes variable length fields , this method usesonly fixed length ( 1-byte ) op CODE and address fields 

CA780308 JB March 28, 1978  12:55 PM


--------------------------------------------------------------
13 Q0 CACM-1195 89  4.201276059437157 BM25


UPLIFTS-University of Pittsburgh Linear File Tandem System
The program are note-worthy in that they createfixed length logical records and fixed length blocks from variable length source data , and formatthe output FOR OPTIMIZATION of processing on the IBM 7090 system A series of computer programs has been developedand is now operational FOR processing the National Aeronautics and SPACE Administration linear filesystem on an IBM 1401-7090 combined data processing system The programs are completely self-checkingand test FOR both validity and accuracy of the input materials as provided by the NationalAeronautics and SPACE Administration 

CA650911 JB March 6, 1978  7:10 PM


--------------------------------------------------------------
13 Q0 CACM-0124 90  4.184175432066513 BM25


An Algorithm for the Assignment Problem
An efficient algorithm FOR its solution is presented in ALGOL CODE 

CA601111 JB March 20, 1978  7:05 PM


--------------------------------------------------------------
13 Q0 CACM-2579 91  4.1675754472893125 BM25


Register Allocation Via Usage Counts
OPTIMIZATION , redundant computations , common subexpressions , register allocation , compilers , programming languages , virtual memory , demand paging 

CA741105 JB January 16, 1978  10:24 AM


--------------------------------------------------------------
13 Q0 CACM-1234 92  4.147341666601625 BM25


The Structure of Yet Another ALGOL Compiler
The `` context problem '' in the transmissionto recursive procedures of parameters `` called by name '' is solved in a manner which permits thehandling of the common cases of simple expressions and array identifiers with particular EFFICIENCY A technique of simulation at compile time of the use of a conventional run-time stackenables the generation of CODE FOR expressions which minimizes stores , fetches and stack-pointer motionat run time , while properly trating recursion and side effects of procedures 

CA650701 JB March 6, 1978  9:29 PM


--------------------------------------------------------------
13 Q0 CACM-2877 93  4.115851081010312 BM25


A Program Data Flow Analysis Procedure
program OPTIMIZATION , data flow analysis , flow graphs , algorithms , compilers 

CA760303 JB January 5, 1978  8:33 AM


--------------------------------------------------------------
13 Q0 CACM-1658 94  4.070359655819104 BM25


Analysis of Algorithms for the Zero-One Programming Problem
operations research , OPTIMIZATION theory , integerprogramming , zero-one variables , algorithms 

CA681208 JB February 21, 1978  1:31 PM


--------------------------------------------------------------
13 Q0 CACM-1551 95  4.018747339956067 BM25


On Compiling Algorithms for Arithmetic Expressions
Thealgorithms generate an object CODE which minimizes the frequency of storing and recovering the partial resultsof the arithmetic expressions in cases where there are several accumulators 

CA670804 JB February 27, 1978  4:35 PM


--------------------------------------------------------------
13 Q0 CACM-2969 96  3.941501507286139 BM25


Optimal Program and Data Locations in Computer Networks
An OPTIMIZATION procedure FOR the allocationof program and data files in a computer network is presented 

CA770503 JB December 29, 1977  2:22 AM


--------------------------------------------------------------
13 Q0 CACM-0104 97  3.8654060541707116 BM25


Digital Simulation of Discrete Flow Systems*
One is of an extensive package-handling plant , with theobjective being OPTIMIZATION of parameters such as storage capacities and processing rates 

CA601212 JB March 20, 1978  6:27 PM


--------------------------------------------------------------
13 Q0 CACM-2715 98  3.803865564167621 BM25


Implementation of a Structured English Query Language
The OPTIMIZATION algorithms designed FOR this purpose are described 

CA751004 JB January 6, 1978  11:02 AM


--------------------------------------------------------------
13 Q0 CACM-2185 99  3.783306599466336 BM25


A Note on Compiling Fixed Point Binary Multiplications
The most significant characteristics of the algorithm are the simplicity of the test whichdetermines if the algorithm should be applied and the degree to which it `` suggests '' efficient object CODE 

CA710605 JB February 3, 1978  10:04 AM


--------------------------------------------------------------
13 Q0 CACM-1290 100  3.739555818446095 BM25


Transparent-Mode Control Procedures for DataCommunication, Using the American Standard Code for Information Interchange -A Tutorial
Transparent-Mode Control Procedures FOR DataCommunication , Using the American Standard CODE FOR Information Interchange -A Tutorial Moreover , it goes on to cover the additional control problemsof handling material such as off line encrypted data or non-ASCII codes by means of systems providingcomplete character transparency In conjunction with the earlier tutorialpaper , this paper is expected to lead to a proposal FOR stand ardizationof data communication control proceduresusing the American Stand ard CODE FOR Information Interchange 

CA650401 JB March 7, 1978  4:10 PM


