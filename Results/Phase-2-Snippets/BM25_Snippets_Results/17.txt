--------------------------------------------------------------
17 Q0 CACM-1795 1  12.149539287015294 BM25


Optimal Code for Serial and Parallel Computation
CODE OPTIMIZATION , sequencing OF operations , detection OF common subexpressions Optimal CODE for Serial AND Parallel Computation 

CA691217 JB February 15, 1978  1:59 PM


--------------------------------------------------------------
17 Q0 CACM-1947 2  12.086629357682904 BM25


Object code Optimization
Object CODE OPTIMIZATION Implementation OF these AND otheroptimizations in OS/360 FORTRAN H are described compilers , data flow analysis , dominance , efficiency , FORTRAN , graph theory , loop structure , MACHINE instructions , object CODE , OPTIMIZATION , redundancyelimination , register assignment , System/360 

CA690102 JB February 20, 1978  12:15 PM


--------------------------------------------------------------
17 Q0 CACM-2897 3  11.299067782323135 BM25


A Case Study of a New Code Generation Technique for Compilers
Each step expands higher level statements into blocks oflower level CODE AND then performs optimizations on the result Each statement has only one possibleexpansion-the task OF tailoring this CODE to take advantage OF any special cases is done by the optimizations A set OF fairlysimple optimizations was identified which allow the compiler to produce good CODE More elaborate optimizationscan further improve the object CODE For most contexts OF the concatenate statement , the codeproduced by a compiler using the expansion-optimization strategy described above compares favorably with thecode produced by a conventional PL/I optimizing compiler compiler structure , optimizing compiler , codegeneration , PL/I compiler , concatenation , program OPTIMIZATION , OPTIMIZATION techniques , data flow analysis A Case Study OF a New CODE Generation Technique for Compilers Such a compiler translates the parsed source CODE intolower level CODE by a sequence OF steps This paper provides evidence that this strategy can indeed result in good object CODE 

CA771203 JB February 1, 1980  3:54 AM


--------------------------------------------------------------
17 Q0 CACM-1223 4  11.131041701969707 BM25


High Speed Compilation of Efficient Object Code
A three-pass compiler with the following propertiesis briefly described : The last two passes scan an INTERMEDIATE language produced by the precedingpass in essentially the reverse OF the order in which it was generated , so that the first pass is theonly one which hasto read the bulky problem-oriented input OPTIMIZATION such as the effective use OF index registers , although as important , is not discussed sincethe object CODE which would be most efficient is highly MACHINE dependent High Speed Compilation OF Efficient Object CODE 

CA650801 JB March 6, 1978  8:45 PM


--------------------------------------------------------------
17 Q0 CACM-3080 5  10.902300626602607 BM25


Proving the Correctness of Heuristically Optimized Code 
A primary use ofthe system is as a post OPTIMIZATION step in CODE generation The examples demonstrate that OPTIMIZATION OF the genre OF this paper can resultin substantially faster operation AND the saving OF memory in terms OF program AND stack sizes Compilers , correctness , CODE OPTIMIZATION , debugging , program verification , Lisp Proving the Correctness OF Heuristically Optimized CODE The low level language programs need notbe generated by a compiler AND in fact could be hand coded 

CA780708 DH February 7, 1979  3:53 PM


--------------------------------------------------------------
17 Q0 CACM-1658 6  10.308898277786247 BM25


Analysis of Algorithms for the Zero-One Programming Problem
The MACHINE time AND storage requirements OF several OF the algorithms are comparedover several test problems OF small AND INTERMEDIATE size operations research , OPTIMIZATION theory , integerprogramming , zero-one variables , algorithms Computer experiments still provide little hopeof solving problems with over 100 variables with a reasonable amount OF MACHINE time 

CA681208 JB February 21, 1978  1:31 PM


--------------------------------------------------------------
17 Q0 CACM-2495 7  10.258934706407505 BM25


Adapting Optimal Code Generation for ArithmeticExpressions to the Instruction Sets Available on Present-Day Computers
arithmetic expressions , CODE generation , compilers , object-code OPTIMIZATION , register assignment , trees Adapting Optimal CODE Generation for ArithmeticExpressions to the Instruction Sets Available on Present-Day Computers 

CA730605 JB January 23, 1978  2:24 PM


--------------------------------------------------------------
17 Q0 CACM-2253 8  10.007850204629044 BM25


Index Ranges for Matrix Calculi
This scheme attempts program optimizationby transforming the original algorithm rather than the MACHINE CODE address calculations , algorithm transformation , compilation , data structures , indexing by name , indexing by position , index domain , index map , indexrange , matrix expressions , normal form , programming languages , program OPTIMIZATION , range operations , symbolicmanipulation , syntactic analysis , well-formed expressions The goal is to automaticallygenerate CODE for handling the tedious address calculations necessitated by complicated data structures 

CA721202 JB January 27, 1978  1:12 PM


--------------------------------------------------------------
17 Q0 CACM-2491 9  9.928816683045179 BM25


Threaded Code
Extensions AND optimizations are mentioned Threaded CODE The concept OF `` threaded CODE '' is presented asan alternative to MACHINE language CODE In softwareit is realized as interpretive CODE not needing an interpreter interpreter , MACHINE CODE , time tradeoff , spacetradeoff , compiled CODE , subroutine calls , threaded CODE 

CA730609 JB January 23, 1978  2:05 PM


--------------------------------------------------------------
17 Q0 CACM-3054 10  9.763246136164922 BM25


Implementing Quicksort Programs
This paper is a practical study OF how toimplement the Quicksort sorting algorithm AND its best variants on real computers , including how to applyvarious CODE OPTIMIZATION techniques Quicksort , analysis OF algorithms , CODE OPTIMIZATION , sorting 

CA781007 DH January 29, 1979  5:40 PM


--------------------------------------------------------------
17 Q0 CACM-2904 11  9.079376303580256 BM25


An Algorithm for Reduction of Operator Strength
These algorithms should fit well into anintegrated package OF local OPTIMIZATION algorithms compilers , OPTIMIZATION OF compiled CODE , program analysis , operator strength reduction , test replacement , strongly connected region 

CA771112 JB December 27, 1977  6:34 AM


--------------------------------------------------------------
17 Q0 CACM-2748 12  9.000278933548723 BM25


Indirect Threaded Code
Indirect Threaded CODE An efficient arrangement for interpretive codeis described It is related to Bell 's notion OF threaded CODE but requires less space AND is moreamenable to MACHINE independent implementations threaded CODE , SNOBOL4 , interpretors , CODE generation 

CA750605 JB January 9, 1978  1:11 PM


--------------------------------------------------------------
17 Q0 CACM-1676 13  8.988124107193954 BM25


The LRLTRAN Compiler
Machine-independent OPTIMIZATION occurs in pass IIand DO-loop AND machine-dependent OPTIMIZATION in pass III compiler , compiler-compiler , MACHINE independence , scatter storage technique , Polish processor , common subsegments , tree representation , OPTIMIZATION To maintain cohesion , a system must be developed , written in a high level language , which minimizes machinedependencies AND isolates those which are necessary 

CA681103 JB February 21, 1978  3:03 PM


--------------------------------------------------------------
17 Q0 CACM-2929 14  8.763151023534089 BM25


An Analysis of Inline Substitution for a Structured Programming Language
An OPTIMIZATION technique known as inline substitutionis analyzed The OPTIMIZATION consists OF replacing a procedure invocation by a modified copyof the procedure body inline substitution , open coding , open compilation , program OPTIMIZATION , compilers , structured programming languages , run-time statistics Preliminary results for theCLU structured programming language indicate that , in programs with a low degree OF recursion , over 90percent OF all procedure calls can be eliminated , with little increase in the size OF compiled CODE AND asmall savings in execution time 

CA770905 JB December 27, 1977  1:23 PM


--------------------------------------------------------------
17 Q0 CACM-1564 15  8.53243008499086 BM25


Description of Basic Algorithm in DETAB/65 Preprocessor
The only OPTIMIZATION attempted is the elimination OF obviously unnecessarytests on certain conditions in the decision table The basic algorithm for the conversion OF decisiontables into COBOL CODE is contained in thegenerator portion OF the DETAB/65 preprocessor Core storage issaved by using queueing techniques AND extensive indexing AND also by outputting the CODE as it is generated , a line at a time 

CA670709 JB February 28, 1978  8:33 AM


--------------------------------------------------------------
17 Q0 CACM-1807 16  8.031967402186856 BM25


Optimization of Expressions in Fortran
OPTIMIZATION OF Expressions in Fortran FORTRAN , OPTIMIZATION , expressions , compilers , compilation , subscripts , register allocation , DO loops , common subexpressions , invariant calculations Ithas been used in the development OF several FORTRAN compilers that have proved to produce excellent objectcode without significantly reducing the compilation speed 

CA691205 JB February 15, 1978  4:16 PM


--------------------------------------------------------------
17 Q0 CACM-1886 17  7.957311418557273 BM25


Generation of Optimal Code for Expressions via Factorization
factorization algorithms , CODE OPTIMIZATION , sequencingof operations , detection OF common subexpressions , factorization OF Boolean expressions Generation OF Optimal CODE for Expressions via Factorization Given a set OF expressions which are to becompiled , methods are presented for increasing the efficiency OF the object CODE produced by first factoringthe expressions , i 

CA690607JB February 17, 1978  10:57 AM


--------------------------------------------------------------
17 Q0 CACM-2835 18  7.650461054731802 BM25


Recursion Analysis for Compiler Optimization
Recursion Analysis for Compiler OPTIMIZATION A relatively simple method for the detectionof recursive use OF procedures is presented for use in compiler OPTIMIZATION Implementation considerationsare discussed , AND a modification OF the algorithm is given to further improve OPTIMIZATION recursion , compiler OPTIMIZATION 

CA760904 JB January 4, 1978  9:36 AM


--------------------------------------------------------------
17 Q0 CACM-1231 19  7.587901390244854 BM25


Peephole Optimization
Peephole OPTIMIZATION Redundant instructions may be discarded duringthe final stage OF compilation by using a simple optimizing technique called peephole OPTIMIZATION 

CA650704 JB March 6, 1978  9:05 PM


--------------------------------------------------------------
17 Q0 CACM-1134 20  7.500015677797349 BM25


Some Effects of the 6600 Computer on Language Structures*
The problem OF compiling efficient 6600 codesprompted the development OF an INTERMEDIATE language reflecting the structure OF the MACHINE , that is moreeasily manipulated in improving object program efficiency The subject OF this paper is the intermediatelanguage AND methods OF manipulating it Several assumptions are madefor purposes OF simplification , although there are cases in which the assumptions are violated in the actual MACHINE 

CA640209 JB March 10, 1978  3:54 AM


--------------------------------------------------------------
17 Q0 CACM-2616 21  7.4138690965391305 BM25


On the Conversion of Programs to Decision Tables: Method and Objectives
Objectives OF these conversions are mainly program debugging AND optimizationin practice decision tables , program OPTIMIZATION , debugging , semantics , theory OF programming , systems analysis 

CA740808 JB January 17, 1978  9:43 AM


--------------------------------------------------------------
17 Q0 CACM-3005 22  7.2908519336733 BM25


Implications of Structured Programming for Machine Architecture
Unlike a Huffman CODE , which utilizes variable length fields , this method usesonly fixed length ( 1-byte ) op CODE AND address fields Implications OF Structured Programming for MACHINE Architecture Based on an empirical study OF more than 10,000lines OF program text written in a GOTO-less language , a MACHINE architecture specifically designed forstructured programs is proposed As a consequence , instruction decoding time is minimized , AND the MACHINE isefficient with respect to both space AND time MACHINE architecture , computer architecture , computerorganization , instruction set design , program characteristics 

CA780308 JB March 28, 1978  12:55 PM


--------------------------------------------------------------
17 Q0 CACM-2423 23  7.282438801744883 BM25


A Parser-Generating System for Constructing Compressed Compilers
parser generators , translator writing systems , syntactic analysis , normal-form grammars , pushdown automata , translation grammars , translator OPTIMIZATION , compression algorithm The PGS is a Fortran-coded compiler In the input translation grammar , each BNF syntactic rule corresponds to a ( possibly empty ) `` codegenerator '' realizable as an assembly language , Fortran or Algol , subroutine that is called wheneverthat syntactic rule is applied in the parse OF a program For an XPL compiler , the parserprogram AND its tables currently occupy 288 words OF 60-bit core memory OF which 140 words are parsingtable entries AND 82 words are links to CODE generators 

CA731103 JB January 20, 197810:41 AM


--------------------------------------------------------------
17 Q0 CACM-0048 24  7.245372547971491 BM25


Shift-Register Code for Indexing Applications
Shift-Register CODE for Indexing Applications In this communication the use OF a shift-registercode with n = 10 is described for calling 64 wireless telemetering stations in a fixed cyclical order A high degree OF redundancy is used , permitting a single-error correcting CODE ( `` minimum-distance-three '' CODE ) with 64 10-bit CODE words to be employed as the station identification CODE Embedding this inthe shift-register CODE with period 1023 permits the CODE to be employed without punctuation , each ofthe telemetering station receivers simply putting received ones AND zeros into a shift register Eachtime the given CODE combination arises identifying the particular station ( barring for tuitous error combinationsof very low probability ) it has been called The communication describes the properties AND applicationof the CODE in some detail AND the finding OF the particular example to be employed on URAL , theSoviet-built drum computer donated to the Indian Statistical Institute by the United NationsTechnical Aid Administration ( UNTAA ) 

CA591011 JB March 22, 1978  4:07 PM


--------------------------------------------------------------
17 Q0 CACM-1362 25  7.205990228060557 BM25


Code Extension in ASCII* (An ASA Tutorial)
CODE Extension in ASCII* ( An ASA Tutorial ) The American Standard CODE for InformationInterchange ( ASCII ) contains a number OF control characters associated with the principle OF CODE extension , that is , with the representation OF information which can not be directly represented by means OF the charactersin the CODE This paper presents a set OF mutually consistent philosophies regarding CODE extension applications , AND suggests a corollary set OF doctrines for the application OF the CODE extension characters Distinctionsare drawn between CODE extension AND such other concepts as `` graphic substitution '' or `` syntacticrepresentation '' which are often used to meet similar requirements Also covered are certain topics whichare not truly concerned with CODE extension but which are often linked with it in discussion on CODE applications The material in this paper is equally applicable in principle to the ( proposed ) ISO international7-bit CODE for information interchange 

CA661005 JB March 2, 1978  4:02 PM


--------------------------------------------------------------
17 Q0 CACM-2701 26  7.110790468145087 BM25


A Fast and Usually Linear Algorithm for GlobalFlow Analysis (Abstract only--Complete paper JACM 23,1 January, 1976)
global flow analysis , data flow , CODE OPTIMIZATION , common subexpression elimination , live-dead analysis , information propagation , flow graph , reducibility , go-to-less programming , depth-first search , path compression Examples are given OF CODE improvement problems which can be solved using the algorithm 

CA751206 JB January 5, 1978  4:08 PM


--------------------------------------------------------------
17 Q0 CACM-2858 27  7.0693203532891715 BM25


A Process for the Determination ofAddresses in Variable Length Addressing
The algorithm is suitable for arbitraryprogram structure AND a choice OF OPTIMIZATION criteria This may be , for example , achieving the smallest number OF long instructions , in which case the total CODE length is minimized , orminimizing the assigned address OF a specified point in the program 

CA760604 JB January 4, 1978  2:09 PM


--------------------------------------------------------------
17 Q0 CACM-2464 28  7.02112213718982 BM25


The Complex Method for Constrained Optimization [E4] (Algorithm A454)
The Complex Method for Constrained OPTIMIZATION [ E4 ] ( Algorithm A454 ) OPTIMIZATION , constrained OPTIMIZATION , Box 's algorithm 

CA730810 JB January 23, 1978  10:34 AM


--------------------------------------------------------------
17 Q0 CACM-1652 29  6.986545939213849 BM25


A Code for Non-numeric Information ProcessingApplications in Online Systems
A CODE for Non-numeric Information ProcessingApplications in Online Systems A CODE has been specifically designed to simplifythe internal information processing operations within an online computer system with respect to non-numericapplications , AND to maximize the transfer rate OF the information channel linking the system andthe system user The CODE has direct application to problems in area such as information retrieval , documentclassification , computer-aided teaching AND text editing This CODE , called IPC ( Information ProcessingCode ) , is an 8-bit CODE set constructed so that 7 , 6 , 5 AND 4-bit subsets can be easily derivedfrom the basic set The CODE set is organized so that simple binary operations can distinguish betweenthe numeric alphabetic , special symbol AND control character codes The number OF usable characters withinthe basic set size may be expanded either by use OF escape codes included in the set , or by suitableinterpretation OF otherwise unassigned codes on the basis OF the requirements OF local environments 

CA670103 JB March 1, 1978  9:05 AM


--------------------------------------------------------------
17 Q0 CACM-1757 30  6.9580424738768745 BM25


Data Code for Calendar Date for Machine-to-MachineData Interchange* (Proposed USA Standard)
Data CODE for Calendar Date for Machine-to-MachineData Interchange* ( Proposed USA Standard ) USA Standard , data CODE , calendar date , machine-to-machinedata interchange , recording calendar date , data group identifier 

CA680413 JB February 23, 1978  10:18 AM


--------------------------------------------------------------
17 Q0 CACM-2433 31  6.923006163628996 BM25


Control Structures in Illiac IV Fortran
The implications OF these features fordata layout AND algorithm structure are discussed , AND the conclusion is drawn that data allocation rather thancode structuring is the crucial ILLIAC OPTIMIZATION problem 

CA731007 JB January 20, 1978  11:30 AM


--------------------------------------------------------------
17 Q0 CACM-2834 32  6.9140577571829684 BM25


Efficient Generation of the BinaryReflected Gray Code and Its Applications
Efficient Generation OF the BinaryReflected Gray CODE AND Its Applications Algorithms are presented to generate the n-bitbinary reflected Gray CODE AND codewords OF fixed weight in that CODE Gray CODE , combinations , subsets , compositions , combinatorial computing 

CA760905 JB January 4, 1978  9:14 AM


--------------------------------------------------------------
17 Q0 CACM-2344 33  6.853345408085991 BM25


On the Optimization of Performance of Time-Sharing Systems by Simulation
On the OPTIMIZATION OF Performance OF Time-Sharing Systems by Simulation The effects OF these variations on a measure OF system performance is used to ascertain whichof the parameters controllable by the job-scheduling algorithm , including the scheduling itself , require OPTIMIZATION , AND which OF the parameters not normally controllable by the scheduling algorithm have a markedeffect on system performance It appears that thesefeatures would benefit from OPTIMIZATION whereas other parameters controllable by the scheduling algorithmaffect system performance in a predictable manner AND would not benefit from OPTIMIZATION time-sharing , simulation studies , OPTIMIZATION , measure OF performance , scheduling algorithms 

CA720601 JB January 31, 1978  9:19 AM


--------------------------------------------------------------
17 Q0 CACM-2944 34  6.753743956874297 BM25


Shifting Garbage Collection Overhead to Compile Time
Implementing the described optimizations requires global flow analysis to be performed on thesource program garbage collection , global flow analysis , list processing , OPTIMIZATION , reference counts , storage management This information is used to find actions that cancel when the CODE is executedand those that can be grouped to achieve improved efficiency 

CA770708 JB December 28, 1977  8:38 AM


--------------------------------------------------------------
17 Q0 CACM-1523 35  6.650035463297348 BM25


SHARER, a Time Sharing System for the CDC 6600
No attempt was made to use reentrant CODE , or to simulate segmentation or paging Implementationtime was approximately six man-years , with the majority OF the CODE being written in FORTRAN It uses a simple scheme for system extension for a MACHINE with only one relocation AND memory bound register 

CA671011 JB February 27, 1978 1:53 PM


--------------------------------------------------------------
17 Q0 CACM-3066 36  6.600234732351508 BM25


A Controlled Experiment in Program Testingand Code Walkthroughs/Inspections
A Controlled Experiment in Program Testingand CODE Walkthroughs/Inspections The results show that the popular CODE walk through/inspection method was as effectiveas other computer-based methods in finding errors AND that the most effective methods ( in terms oferrors found AND cost ) employed pairs OF subjects who tested the program independently AND then pooledtheir findings Software reliability , program verification , debugging , testing , CODE walkthroughs , CODE inspections , personnel selection 

CA780906 DH February 5, 1979  10:47 AM


--------------------------------------------------------------
17 Q0 CACM-2107 37  6.538938938933079 BM25


The Quadratic Quotient Method: A HashCode Eliminating Secondary Clustering
The Quadratic Quotient Method : A HashCode Eliminating Secondary Clustering Secondary clustering as a cause OF hash CODE inefficiency is discussed , AND a new hashing method based on its elimination is presented hashing , hash CODE , scatter storage , calculated address , clustering , search , symbol table , collisions , keys , table look-up 

CA700208 JB February 14, 1978  10:18 AM


--------------------------------------------------------------
17 Q0 CACM-3053 38  6.50205963504912 BM25


Packed Scatter Tables
The displacements are depth-limited approximations to an enumerative ( exhaustive ) OPTIMIZATION , although packing costs remain linear-O ( n ) -with table size n The techniques areprimarily suited for important fixed ( but possibly quite large ) tables for which reference frequencies maybe known : op-code tables , spelling dictionaries , access arrays 

CA781008 DH January 29, 1979  5:30 PM


--------------------------------------------------------------
17 Q0 CACM-1275 39  6.039271699775297 BM25


Code Structures for Protection and Manipulationof Variable Length Items (Corrigendum)
CODE Structures for Protection AND Manipulationof Variable Length Items ( Corrigendum ) 

CA650416 JB March 7, 1978  3:31 PM


--------------------------------------------------------------
17 Q0 CACM-1973 40  6.031981838617111 BM25


The Linear Quotient Hash Code
The Linear Quotient Hash CODE hashing , hash CODE , scatter storage , calculatedaddress , search , table , lookup , symbol table , keys 

CA701105 JB February 10, 1978  8:33 AM


--------------------------------------------------------------
17 Q0 CACM-2680 41  5.97590816906964 BM25


Optimal Space Allocation on Disk Storage Devices
An OPTIMIZATION model for the assignment OF files to disk packs , AND packs to eitherresident or nonresident status is presented disk analysis , disk OPTIMIZATION , disk files , filesystems , file scheduling , space allocation , memory hierarchy 

CA740303 JB January 18, 1978  12:32 PM


--------------------------------------------------------------
17 Q0 CACM-1066 42  5.890406762109026 BM25


Growing Applications of Linear Programming
Use OF linear programming models has grown soextensively in recent years that the whole concept for organizing a computer CODE has undergone a radicalchange the simplex method ) toa computer CODE An advanced CODE must cope with such a variety OF situations that the respective computersubprograms must be organized into an integrated system Someof the components OF such a system are : translation OF problem statement in terms OF basic data to linearprogramming matrix coefficients , data transmission for direct computer entry , data file at the computer center , data processing AND editing prior to solving the simplex algorithm , an efficient AND reliable codefor solving the above-mentioned algorithm , AND flexible means for summarizing the results 

CA640601 JB March 9, 1978  9:55 PM


--------------------------------------------------------------
17 Q0 CACM-2533 43  5.793535086715267 BM25


Gray Code and the +- Sign Sequence when+-f (+-f(+-f(...+-f(x)...))) Is Ordered
Gray CODE AND the +- Sign Sequence when+-f ( +-f ( +-f ( Gray CODE , sign sequences , ordering , positivemonotonic functions , binary system , Galois sum 

CA730306 JB January 24, 1978  10:35 AM


--------------------------------------------------------------
17 Q0 CACM-1670 44  5.787788893484094 BM25


Correspondences of 8-Bit and Hollerith Codes forComputer Environments (A USASI Tutorial Standard)
Correspondences OF 8-Bit AND Hollerith Codes forComputer Environments ( A USASI Tutorial Standard ) USA standard , card CODE , punched card , punched cardcode , hole-patterns , hole-patterns assignment , punched card systems 

CA681109 JB February 21, 1978  2:33 PM


--------------------------------------------------------------
17 Q0 CACM-1389 45  5.775775937666488 BM25


A Programmer's Description of L^6
It containsmany OF the facilities which underlie such list processors as IPL , LISP , COMIT ad SNOBOL , but permitsthe user to get much closer to MACHINE CODE in order to write faster-running programs , to use storagemore efficiently AND to build a wider variety OF linked data structures 

CA660809 JB March 2, 1978  7:20 PM


--------------------------------------------------------------
17 Q0 CACM-1331 46  5.742705198575667 BM25


Code Structures for Protection and Manipulation of Variable-Length Items
CODE Structures for Protection AND Manipulation OF Variable-Length Items A 6-bit CODE assignmentof alphanumeric characters for fixed word-length computers is given AND its suitability for error detectionand variable-length item manipulation is shown 

CA650106 JB March 8, 1978  2:48 PM


--------------------------------------------------------------
17 Q0 CACM-2836 47  5.718665780974662 BM25


Weighted Derivation Trees
The method may be applied to problemsinvolving probabilistic parsing or combinatorial OPTIMIZATION derivation tree , parse tree , probabilistic grammar , structural ambiguity , combinatorial OPTIMIZATION 

CA760903 JB January 4, 1978  9:41 AM


--------------------------------------------------------------
17 Q0 CACM-1655 48  5.714651416140964 BM25


Code Extension Procedures for InformationInterchange* (Proposed USA Standard)
CODE Extension Procedures for InformationInterchange* ( Proposed USA Standard ) standard CODE , CODE , information interchange , characters , shift out , shift in , escape , data link escape , control functions , standard procedures , CODE extension , CODE table , bit pattern 

CA681211 JB February 21, 1978  12:16 PM


--------------------------------------------------------------
17 Q0 CACM-3125 49  5.698518310447 BM25


Global Optimization by Suppression of Partial Redundancies
Global OPTIMIZATION by Suppression OF Partial Redundancies Optimizer , OPTIMIZATION , compiler , compilation , redundancy elimination , invariant computation elimination , partial redundancy , data flow analysis , Boolean systems 

CA790204 DH April 10, 1979  4:19 PM


--------------------------------------------------------------
17 Q0 CACM-2812 50  5.651887184877938 BM25


Computer-Aided Analysis and Design of Information Systems
The analyzed problem statement was translated to the form necessary for use by theSODA ( Systems OPTIMIZATION AND Design Algorithm ) program for the generation OF alternative specificationsof program modules AND logical database structures computer-aided analysis , information systems , logicalsystem design , problem statement language , problem statement analyzer , physical system design , accurately defined systems , systems OPTIMIZATION AND design algorithm 

CA761203 JB January 3, 1978  2:31 PM


--------------------------------------------------------------
17 Q0 CACM-2716 51  5.6514483488870075 BM25


Optimizing the Performance of a Relational Algebra Database Interface
SQUIRAL seeks to minimize query response time AND space utilization by : ( 1 ) performingglobal query OPTIMIZATION , ( 2 ) exploiting disjoint AND pipelined concurrency , ( 3 ) coordinating sort ordersin temporary relations , ( 4 ) employing directory analysis , AND ( 5 ) maintaining locality in page references relational database , database OPTIMIZATION , invertedfile , automatic programming , query language , data manipulation language , very high level language 

CA751003 JB January 6, 1978  11:19 AM


--------------------------------------------------------------
17 Q0 CACM-2964 52  5.6319525050675425 BM25


An Approach to Optimal Design of Storage Parameters in Databases
database organization , storage parameteroptimization , resident , overflow storage 

CA770508 JB December 29, 1977  1:48 AM


--------------------------------------------------------------
17 Q0 CACM-3018 53  5.60006151227172 BM25


Covering Edges by Cliques with Regard toKeyword Conflicts and Intersection Graphs
Kellerman has presented a method for determiningkeyword conflicts AND described a heuristic algorithm which solves a certain combinatorial optimizationproblem in connection with this method This OPTIMIZATION problem is here shown to be equivalentto the problem OF covering the edges OF a graph by complete subgraphs with the objective OF minimizingthe number OF complete subgraphs 

CA780205 JB March 28, 1978  4:18 PM


--------------------------------------------------------------
17 Q0 CACM-3171 54  5.5946451088539515 BM25


Line Numbers Made Cheap
Line number administration , diagnostic messages , abstract MACHINE CODE 

CA791004 DB January 17, 1980  9:57 AM


--------------------------------------------------------------
17 Q0 CACM-1542 55  5.552714776172426 BM25


A Microprogrammed Implementation of EULER on IBM System/360 Model 30
The role OF microprogramming is stressed , which opens a new dimension in the processingof interpretive CODE The system consists OF a microprogrammed compiler AND a microprogrammedString Language Interpreter , AND OF an I/O control program written in 360 MACHINE language 

CA670904 JB February 27, 1978  3:44 PM


--------------------------------------------------------------
17 Q0 CACM-3173 56  5.5479351355259325 BM25


A Psychology of Learning BASIC
This paper addresses the question : What does a person knowfollowing learning OF BASIC programming ? Several underlying conceptualstructures are identified : ( 1 ) a transaction is an event thatoccurs in the computer AND involves some operation on some objectat some location , ( 2 ) a prestatement is a set OF transactions correspondingto a line OF CODE , ( 3 ) chunks are frequently occurring configurations OF prestatements corresponding to several lines OF CODE 

CA791101 DB January 17, 1980  10:38 AM


--------------------------------------------------------------
17 Q0 CACM-2611 57  5.5330358461521785 BM25


The Complex Method for Constrained Optimization (Algorithm R454)
The Complex Method for Constrained OPTIMIZATION ( Algorithm R454 ) 

CA740813 JB January 17, 1978  9:28 AM


--------------------------------------------------------------
17 Q0 CACM-1154 58  5.483786848683934 BM25


Multi-Tape and Infinite-State Automata -- A Survey
INTERMEDIATE machines can be created by adjoining on infinite-state memoryto a finite-state MACHINE AND then performing any or all OF the following : ( 1 ) restrict the manner inwhich the unbounded portion OF the memory can be accessed , ( 2 ) bound the number OF steps allowed for acomputation by some increasing recursive function OF the length OF the input , ( 3 ) restrict the total amountof memory available in the same manner A survey OF machines which are more powerfulthan finite automata AND less powerful than general Turing machines is presented It is felt that the machinesin this category are as closely related to digital computers as either the finite automata or theunrestricted Turing machines 

CA651215 JB March 6, 1978  3:24 PM


--------------------------------------------------------------
17 Q0 CACM-2195 59  5.463573437024724 BM25


On the Optimal Detection of Curves in Noisy Pictures
The relationbetween the structure OF the figure OF merit AND the complexity OF the OPTIMIZATION process is then discussed picture processing , picture recognition , picturedescription , curve detection , line detection , edge detection , optimal detection , heuristic methods , global recognition , parallel processing , dynamic programming , interaction graph , secondary OPTIMIZATION problem 

CA710504 JB February 3, 1978  2:49 PM


--------------------------------------------------------------
17 Q0 CACM-2537 60  5.424774952881474 BM25


Common Phrases and Minimum-Space Text Storage
The storage technique gives rise to a mathematical OPTIMIZATION problem : determine how each message shoulduse the available phrases to minimize its storage requirement diagnostic messages , error messages , common phrases , minimum space , text storage , OPTIMIZATION , dynamic programming 

CA730302 JB January 24, 1978  1:12 PM


--------------------------------------------------------------
17 Q0 CACM-2138 61  5.321254427549581 BM25


BLISS: A Language for Systems Programming
Prime design goals OF the design are theability to produce highly efficient object CODE , to allow access to all relevant hardware features ofthe host MACHINE , AND to provide a rational means by which to cope with the evolutionary nature OF systemsprograms This languageis designed so as to be especially suitable for use in writing production software systems for aspecific MACHINE ( the PDP-10 ) : compilers , operating systems , etc 

CA711205 JB February 2, 1978  10:09 AM


--------------------------------------------------------------
17 Q0 CACM-2801 62  5.311872583132969 BM25


Storage-Efficient Representation of Decimal Data
In over half OF the cases the compressed CODE results from the conventionalBCD CODE by simple removal OF redundant 0 bits binary-coded decimal digits , decimal data storage 

CA750110 JB January 12, 1978  9:42 AM


--------------------------------------------------------------
17 Q0 CACM-2888 63  5.310403092221778 BM25


Information Reference Coding
Items in business systems have to be identifiedby reference codes , which can later be used as data codes AND file keys in an associated data processingsystem In business systems associated with large collections OF integrated files ( database ) it is vital to assign codes in a methodical way so as to control future extension AND changes while maintainingcorrect program action The principles OF methodical coding are discussed , AND the way inwhich logical connections between data items must be reflected in the reference CODE framework is shownthrough a set-theoretic information model data , file , reference CODE , systemsanalysis , information modeling , database 

CA760105 JB January 5, 1978  10:11 AM


--------------------------------------------------------------
17 Q0 CACM-1402 64  5.271083431946379 BM25


Partial Step Integration
This methodof obtaining functional values at points INTERMEDIATE to the integration points yields accuracy comparableto the integration AND does not require storing OF additional information as in interpolation methods 

CA660710 JB March 2, 1978  9:08 PM


--------------------------------------------------------------
17 Q0 CACM-1786 65  5.214608150529879 BM25


An Improved Hash Code for Scatter Storage
An Improved Hash CODE for Scatter Storage hash CODE , hash table , scatter storage , searching 

CA680108 JB February 23, 1978  2:31 PM


--------------------------------------------------------------
17 Q0 CACM-2411 66  5.2071754075562335 BM25


Tree-Structured Programs
control structures , flowcharts , goto statements , inductive assertion , least fix points , OPTIMIZATION in compilers , program documentation , program flow graphs , programming language design , proof OF programs , semantics OF programming languages , structured programming 

CA731115 JB January 19, 1978  4:19 PM


--------------------------------------------------------------
17 Q0 CACM-1195 67  5.202108894176899 BM25


UPLIFTS-University of Pittsburgh Linear File Tandem System
The program are note-worthy in that they createfixed length logical records AND fixed length blocks from variable length source data , AND formatthe output for OPTIMIZATION OF processing on the IBM 7090 system 

CA650911 JB March 6, 1978  7:10 PM


--------------------------------------------------------------
17 Q0 CACM-2877 68  5.175466686879504 BM25


A Program Data Flow Analysis Procedure
program OPTIMIZATION , data flow analysis , flow graphs , algorithms , compilers 

CA760303 JB January 5, 1978  8:33 AM


--------------------------------------------------------------
17 Q0 CACM-1204 69  5.171921550076549 BM25


Character Structure and Character Parity Sense forSerial-by-Bit Data Communication in the American Standard Code for Information Interchange (Proposed American Standard)
Character Structure AND Character Parity Sense forSerial-by-Bit Data Communication in the American Standard CODE for Information Interchange ( Proposed American Standard ) 

CA650902 JB March 6, 1978  7:41 PM


--------------------------------------------------------------
17 Q0 CACM-2953 70  5.141306844434554 BM25


Notes on Recursion Elimination
recursion elimination , OPTIMIZATION OF programs , stacks , trees , sorting algorithms , computational induction 

CA770610 JB December 28, 1977  12:50 PM


--------------------------------------------------------------
17 Q0 CACM-3150 71  5.131971627618665 BM25


Beyond Programming Languages
Justas high level languages enabled the programmer to escape from theintricacies OF a MACHINE 's order CODE , higher level programming systemscan provide the means to understand AND manipulate complexsystems AND components 

CA790701 DH August 22, 1979  2:00 PM


--------------------------------------------------------------
17 Q0 CACM-2134 72  5.1154201299163855 BM25


An Extension of the Munkres Algorithm forthe Assignment Problem to Rectangular Matrices
operations research , OPTIMIZATION theory , assignmentproblem , rectangular matrices , algorithm 

CA711209 JB February 2, 1978  9:46 AM


--------------------------------------------------------------
17 Q0 CACM-3115 73  5.0890975197425705 BM25


Orderly Enumeration of Nonsingular BinaryMatrices Applied to Text Encryption
Each natural number corresponds to two INTERMEDIATE vectors Examples OF complete enumeration OF all 2 x 2 AND 3 x 3 nonsingularbinary matrices were produced by mapping the INTERMEDIATE vectors to the matrices 

CA780401 DH February 27, 1979  11:05 AM


--------------------------------------------------------------
17 Q0 CACM-0123 74  5.06662609040902 BM25


Compilation for Two Computers with NELIAC
This compiler was used to generate a version OF itself which , runningas a COUNTESS program , generated MACHINE CODE for the Control Data Corporation CDC-1604 

CA601112 JB March 20, 1978  7:03 PM


--------------------------------------------------------------
17 Q0 CACM-0252 75  5.053953022265516 BM25


Programming a Duplex Computer System
After achieving the required level OF integration , both computers do similar processingon the same inputs AND continually cross-check the INTERMEDIATE AND final results 

CA611116 JB March 15, 1978  10:40 PM


--------------------------------------------------------------
17 Q0 CACM-1992 76  5.047821193424556 BM25


Comment on Bell's Quadratic Quotient Method for Hash Code Searching
Comment on Bell 's Quadratic Quotient Method for Hash CODE Searching hashing , hash CODE , scatter storage , calculated address , clustering , search , symbol table , keys , table look-up 

CA700913 JB February 10, 1978  9:56 AM


--------------------------------------------------------------
17 Q0 CACM-3175 77  5.035545357415847 BM25


Breaking Substitution Ciphers Using a Relaxation Algorithm
Substitution ciphers are codes in which each letterof the alphabet has one fixed substitute , AND the word divisions do not change Every CODE letter is assigned probabilities OF representing plain textletters These probabilities are updated in parallel for allcode letters , using joint letter probabilities 

CA791103 DB January 23, 1980  11:15 AM


--------------------------------------------------------------
17 Q0 CACM-0124 78  5.021407647590761 BM25


An Algorithm for the Assignment Problem
An efficient algorithm for its solution is presented in ALGOL CODE 

CA601111 JB March 20, 1978  7:05 PM


--------------------------------------------------------------
17 Q0 CACM-1232 79  5.000618573182381 BM25


Representation of the Standard ECMA 7-BitCode in Punched Cards (ECMA Standard)
Representation OF the Standard ECMA 7-BitCode in Punched Cards ( ECMA Standard ) 

CA650703 JB March 6, 1978  9:06 PM


--------------------------------------------------------------
17 Q0 CACM-2133 80  4.999099273077225 BM25


Algorithm for the Assignment Problem(Rectangular Matrices) [H] (Algorithm 415)
operations research , OPTIMIZATION theory , assignment problem , rectangular matrices 

CA711210 JB February 2, 1978  9:38 AM


--------------------------------------------------------------
17 Q0 CACM-2969 81  4.97338445008436 BM25


Optimal Program and Data Locations in Computer Networks
An OPTIMIZATION procedure for the allocationof program AND data files in a computer network is presented 

CA770503 JB December 29, 1977  2:22 AM


--------------------------------------------------------------
17 Q0 CACM-1392 82  4.971327406737553 BM25


Experience with FORMAC Algorithm Design
One recurrent theme is the need to avoid excessiveintermediate expression swell in order to minimize core storage requirements 

CA660806 JB March 2, 1978  7:43 PM


--------------------------------------------------------------
17 Q0 CACM-1783 83  4.945826525731834 BM25


In-and-Out Conversions
For all combinations OF rounding AND truncationconversions the question is considered OF how many significant digits are needed in the intermediatebase to allow such in-and-out conversions to return the original number ( when possible ) , or at least significant digit 

CA680111 JB February 23, 1978  2:14 PM


--------------------------------------------------------------
17 Q0 CACM-1719 84  4.92490782621248 BM25


A Methodology for Calculating andOptimizing Real-Time System Performance
Criteria for evaluating performance are described ; a methodology for calculatingand optimizing is outlined ; AND the method is illustrated by carrying out a portion OF the performancecalculation AND the OPTIMIZATION OF a drum-oriented message switching system 

CA680710 JB February 22, 1978  11:40 AM


--------------------------------------------------------------
17 Q0 CACM-1651 85  4.864334959647562 BM25


An Interpretive Input Routine for Linear Programming
In this descriptive article an input codeis presented which greatly simplifies data input to any linear programming solution routine , for subsequentuse either as a pedagogical device or for solving rather small LP problems This latter ( limited ) use derives not at all from inherent limitations in the CODE itself , but from an efficiency evaluation : large LP problems would doubtless benefit from an input system more suited for bulk data handling thanthe input CODE described 

CA670104 JB March 1, 1978  8:58 AM


--------------------------------------------------------------
17 Q0 CACM-1756 86  4.860852792426096 BM25


Hollerith Punched Card Code* (Proposed USA Standard)
Hollerith Punched Card Code* ( Proposed USA Standard ) USA Standard , card CODE , punched card , punched cardcode , hole-patterns , hole-patterns assignment , punched card systems 

CA680414 JB February 23, 1978  10:14 AM


--------------------------------------------------------------
17 Q0 CACM-3020 87  4.851106137853478 BM25


Systematic Recursion Removal
recursion removal , recursion elimination , OPTIMIZATION , procedure linkage , procedure integration 

CA780203 JB March 28, 1978  4:26 PM


--------------------------------------------------------------
17 Q0 CACM-0333 88  4.819539217070688 BM25


Design of an Improved* Transmission/Data Processing Code
Design OF an Improved* Transmission/Data Processing CODE 

CA610501 JB March 16, 1978  11:14 PM


--------------------------------------------------------------
17 Q0 CACM-2321 89  4.810488246855019 BM25


On the Interface Between Computers and Data Communications Systems
Future systems that combine computers , digitalterminals , AND communications equipment present design OPTIMIZATION problems that require reconsiderationof the traditional functional responsibilities OF the respective subsystems 

CA720707 JB January 30, 1978  2:46 PM


--------------------------------------------------------------
17 Q0 CACM-0104 90  4.804346266508533 BM25


Digital Simulation of Discrete Flow Systems*
One is OF an extensive package-handling plant , with theobjective being OPTIMIZATION OF parameters such as storage capacities AND processing rates 

CA601212 JB March 20, 1978  6:27 PM


--------------------------------------------------------------
17 Q0 CACM-2185 91  4.78796243817332 BM25


A Note on Compiling Fixed Point Binary Multiplications
The most significant characteristics OF the algorithm are the simplicity OF the test whichdetermines if the algorithm should be applied AND the degree to which it `` suggests '' efficient object CODE 

CA710605 JB February 3, 1978  10:04 AM


--------------------------------------------------------------
17 Q0 CACM-1065 92  4.784885743035953 BM25


Bit Sequencing of the American Standard Code forInformation Interchange (ASCII) in Serial-by-Bit Data Transmission (Proposed American Standard)
Bit Sequencing OF the American Standard CODE forInformation Interchange ( ASCII ) in Serial-by-Bit Data Transmission ( Proposed American Standard ) 

CA640602 JB March 9, 1978  9:47 PM


--------------------------------------------------------------
17 Q0 CACM-2699 93  4.769904781146898 BM25


Automatic Data Structure Choice in a Language of Very High Level
program OPTIMIZATION , automatic programming , high-levellanguages , set-theoretic languages , data structure choice 

CA751208 JB January 5, 1978  3:53 PM


--------------------------------------------------------------
17 Q0 CACM-2579 94  4.768999746900403 BM25


Register Allocation Via Usage Counts
OPTIMIZATION , redundant computations , common subexpressions , register allocation , compilers , programming languages , virtual memory , demand paging 

CA741105 JB January 16, 1978  10:24 AM


--------------------------------------------------------------
17 Q0 CACM-1387 95  4.754668764424213 BM25


Solution of Systems of Polynomial Equations By Elimination
The method , by itself , appears in appropriate , however , in the solutionof large systems OF equation due to the explosive growth in the INTERMEDIATE equations AND the hazardswhich arise when the coefficients are truncated The elimination procedure as described by Williamshas been coded in LISP AND FORMAC AND used in solving systems OF polynomial equations 

CA660811 JB March 2, 1978  7:11 PM


--------------------------------------------------------------
17 Q0 CACM-2290 96  4.737841816821078 BM25


Immediate Predominators in a Directed Graph [H] (Algorithm A430)
predominator , immediate predominator , graph theory , directed graph , shortest path , articulation , connectivity , program OPTIMIZATION , optimizing compiler 

CA720812 JB January 30, 1978  9:19 AM


--------------------------------------------------------------
17 Q0 CACM-1726 97  4.723496124850665 BM25


Preliminary Investigation of Techniquesfor Automated Reading of Unformatted Text
Methods for converting unstructured printedmaterial into computer CODE are experimentally investigated Other matters related to thedesign OF a general purpose page reader , such as the segmentation OF printed text , the possibility oftime-sharing the scanner , interactive man-machine operation , AND the facsimile reproduction OF illustrations , are discussed pattern recognition , character recognition , textreading , information retrieval , unformatted text operator-controlled reader , online reader , text-image discrimination , reading MACHINE 

CA680703 JB February 22, 1978  2:52 PM


--------------------------------------------------------------
17 Q0 CACM-1551 98  4.6982955627340655 BM25


On Compiling Algorithms for Arithmetic Expressions
Thealgorithms generate an object CODE which minimizes the frequency OF storing AND recovering the partial resultsof the arithmetic expressions in cases where there are several accumulators 

CA670804 JB February 27, 1978  4:35 PM


--------------------------------------------------------------
17 Q0 CACM-0031 99  4.684045306740032 BM25


IBM 704 Code-Nundrums
IBM 704 Code-Nundrums 

CA580301 JB March 22, 1978  9:21 PM


--------------------------------------------------------------
17 Q0 CACM-0797 100  4.684045306740032 BM25


American Standard Code for Information Interchange
American Standard CODE for Information Interchange 

CA630801 JB March 13, 1978  8:55 PM


