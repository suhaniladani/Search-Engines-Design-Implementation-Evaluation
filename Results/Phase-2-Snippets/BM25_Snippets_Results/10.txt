--------------------------------------------------------------
10 Q0 CACM-2785 1  18.90364482199134 BM25


Glypnir-A Programming Language for Illiac IV
The syntax of the language is based on ALGOL 60 , but hasbeen extended to allow the programmer explicitly to specify the parallelism of his algorithm in terms of 64-wordvectors This paper describes the characteristics , goals and philosophy of the language , and discusses someof the problems associated with PARALLEL computer architectures GLYPNIR , Illiac IV , Programming language , PARALLEL COMPUTATION , PARALLEL architecture GLYPNIR is one of the earliest existing languagesdesigned FOR programming the Illiac IV computer 

CA750303JB January 9, 1978  4:57 PM


--------------------------------------------------------------
10 Q0 CACM-2685 2  18.882369609516452 BM25


The Parallel Execution of DO Loops
The PARALLEL Execution of DO Loops Methods are developed FOR the PARALLEL executionof different iterations of a DO loop PARALLEL computing , multiprocessor computers , array computers , vector computers , loops 

CA740204 JB January 18, 1978  1:14 PM


--------------------------------------------------------------
10 Q0 CACM-2266 3  18.70071375607031 BM25


A Highly Parallel Algorithm for ApproximatingAll Zeros of a Polynomial with Only Real Zeros
A Highly PARALLEL Algorithm FOR ApproximatingAll Zeros of a Polynomial with Only Real Zeros The algorithm , whichis conceptually suitable FOR PARALLEL COMPUTATION , determines its own starting values so that convergenceto the zeros is guaranteed PARALLEL numerical algorithms , real polynomials , real zeros , Newton 's method , starting values , guaranteed convergence 

CA721103 JB January 27, 1978  2:35 PM


--------------------------------------------------------------
10 Q0 CACM-2714 4  18.418400894642385 BM25


Merging with Parallel Processors
Merging with PARALLEL Processors Consider two linearly ordered sets A , B , |A|=m , |B|=n , m < =n , and p , p < =m , PARALLEL processors working synchronously The paper presents an algorithmfor merging A and B with the p PARALLEL processors , which requires at most 2 [ log2 ( 2m+1 ) ] + [ 3m/p ] + [ m/p ] [ log2 ( n/m ) ] steps These performances compare very favorably withthe previous best PARALLEL merging algorithm , Batcher 's algorithm , which requires n/p + ( ( m+n ) /2p ) log2 msteps in the general case and km/p + ( ( k+1 ) /2 ) ( m/p ) log2 m in the special case where n=km PARALLEL processing , PARALLEL merging , PARALLEL binary insertion 

CA751005 JB January 6, 1978  10:50 AM


--------------------------------------------------------------
10 Q0 CACM-1795 5  18.34386905079047 BM25


Optimal Code for Serial and Parallel Computation
Optimal Code FOR Serial and PARALLEL COMPUTATION 

CA691217 JB February 15, 1978  1:59 PM


--------------------------------------------------------------
10 Q0 CACM-1158 6  18.12066584461299 BM25


Program Structures for Parallel Processing
Program Structures FOR PARALLEL Processing Constructs FOR organizing and explicating parallelprogram segments are discussed as extensions to ALGOL 60 

CA651211 JB March 6, 1978  3:39 PM


--------------------------------------------------------------
10 Q0 CACM-1828 7  18.074661854474535 BM25


Synchronization in a Parallel-Accessed Data Base
Synchronization in a Parallel-Accessed Data Base The following problem is considered : Givena data base which can be manipulated simultaneously by more than one process , what are the rules FOR synchronizationwhich will maximize the amount of PARALLEL activity allowed PARALLEL accessing , PARALLEL search , file search , data base , synchronization , locking , deadlock 

CA691102 JB February 15, 1978  1:13 PM


--------------------------------------------------------------
10 Q0 CACM-2700 8  17.97405481707607 BM25


Reduction: A Method of Proving Properties of Parallel Programs
Reduction : A Method of Proving Properties of PARALLEL Programs When proving that a PARALLEL program has agiven property it is often convenient to assume that a statement is indivisible , i Thus correctness proofs of a PARALLEL system can often be greatly simplified deadlock free , reduction , interruptible , indivisible , PARALLEL program , semaphore , verification method , process , COMPUTATION sequence 

CA751207 JB January 5, 1978  3:59 PM


--------------------------------------------------------------
10 Q0 CACM-2895 9  17.969795464906497 BM25


A Language for Formal Problem Specification
A language FOR specifying the in tended behaviorof communicating PARALLEL processes is described formal specifications , program correctness , parallelprocessing , synchronization , readers/writers problem The specifications are constrain ts on the order in whichevents of a COMPUTATION can occur 

CA771205 DMM December 22, 1977  12:44 PM


--------------------------------------------------------------
10 Q0 CACM-3075 10  17.92308111356481 BM25


Fast Parallel Sorting Algorithms
Fast PARALLEL Sorting Algorithms A PARALLEL bucket-sort algorithm is presentedthat requires time O ( log n ) and the use of n processors PARALLEL processing , sorting , algorithms , bucket sort The model of COMPUTATION FOR this procedurepermits simultaneous fetches from the same memory location 

CA780803 DH February 7, 1979  10:25 AM


--------------------------------------------------------------
10 Q0 CACM-1262 11  17.857414085843452 BM25


Procedure-Oriented Language Statements to Facilitate Parallel Processing
Procedure-Oriented Language Statements to Facilitate PARALLEL Processing Two statements are suggested which allow a programmerwriting in a procedure-oriented language to indicate sections of program which are to be executedin PARALLEL These serve partly as brackets in establishinga range of PARALLEL operation and partly to define each PARALLEL path within this range 

CA650509 JB March 7, 1978  2:17 PM


--------------------------------------------------------------
10 Q0 CACM-2973 12  17.815512231239907 BM25


Sorting on a Mesh-Connected Parallel Computer
Sorting on a Mesh-Connected PARALLEL Computer PARALLEL computer , PARALLEL sorting , PARALLEL merge , routing and comparison steps , perfect shuffle 

CA770409 JB December 29, 1977  4:58 AM


--------------------------------------------------------------
10 Q0 CACM-2896 13  17.45837082486593 BM25


An Exercise in Proving Parallel Programs Correct
An Exercise in Proving PARALLEL Programs Correct A PARALLEL program , Dijkstra 's on-the-fly garbagecollector , is proved correct using a proof method developed by Owicki Difficultieswith proving such PARALLEL programs correct are discussed 

CA771204 JB February 1, 1980  3:37 AM 


--------------------------------------------------------------
10 Q0 CACM-3059 14  17.373544190633304 BM25


Models for Parallel Processing WIthin Programs:Application to CPU:I/O and I/O:I/O Overlap
Models FOR PARALLEL Processing WIthin Programs : Application to CPU : I/O and I/O : I/O Overlap Approximate queueing models FOR internal parallelprocessing by individual programs in a multiprogrammed system are developed in this paper Multiprogramming , PARALLEL processing , queueingnetwork models , multiprocessing of COMPUTATION and I/O 

CA781002 DH January 29, 1979  6:23 PM


--------------------------------------------------------------
10 Q0 CACM-1601 15  17.051411999077523 BM25


Parallel Numerical Methods for the Solution of Equations
PARALLEL Numerical Methods FOR the Solution of Equations The s8everal approximations obtained in any iteration are computationallyindependent , making the methods of interest in a PARALLEL processing environment Several families of numerical procedureswhich use the technique of the procedures in a PARALLEL processing environment are developed and measurementsof these statistics are reported These measurements are interpreted in a PARALLEL processingenvironment 

CA670505 JB February 28, 1978  10:44 AM


--------------------------------------------------------------
10 Q0 CACM-1811 16  16.88577703683938 BM25


A Case Study in Programming for Parallel-Processors
A Case Study in Programming FOR Parallel-Processors An affirmative partial answer is provided tothe question of whether it is possible to program parallel-processor computing systems to efficiently decreaseexecution time FOR useful problems Parallel-processor systems are multiprocessor systems in which several ofthe processors can simultaneously execute separate tasks of a single job , thus cooperating to decreasethe solution time of a computational problem Aprogram FOR the determination of the distribution of current in an electrical network was written FOR aparallel-processor computing system , and execution of this program was simulated parallel-processor , parallelism , PARALLEL programming , multiprocessor , multiprogramming , tasking , storage interference , electrical network , simulation , relaxation , Jacobi , Gauss-Seidel , convergence 

CA691201 JB February 15, 1978  4:45 PM


--------------------------------------------------------------
10 Q0 CACM-1302 17  16.785287209978208 BM25


Parallel Signaling Speeds for Data Transmission(Proposed American Stand ard)
PARALLEL Signaling Speeds FOR Data Transmission ( Proposed American Stand ard ) 

CA650305 JB March 7, 1978  6:08 PM


--------------------------------------------------------------
10 Q0 CACM-0950 18  16.33910948499439 BM25


Parallel Methods for Integrating Ordinary Differential Equations
PARALLEL Methods FOR Integrating Ordinary Differential Equations This paper is dedicated to the proposition that , in order to take full advantage FOR real-time computations of highly PARALLEL computers as can beexpected to be available in the near future , much of numerical analysis will have to be recast in a more '' PARALLEL '' form As an example , a method is proposed FOR `` parallelizing '' the numerical integration of an ordinary differentialequation , which process , by all standard methods , is entirely serial 

CA641221 JB March 9, 1978  3:09 PM


--------------------------------------------------------------
10 Q0 CACM-3156 19  16.314696544797627 BM25


Computing Connected Components on Parallel Computers
Computing Connected Components on PARALLEL Computers We present a PARALLEL algorithm which uses n2 processors to find the connectedcomponents of an undirected graph with n vertices in time O ( log2n ) Graph theory , PARALLEL processing , algorithms , transitive closure , connected component 

CA790802 DB January 4, 1980  12:18 PM


--------------------------------------------------------------
10 Q0 CACM-2851 20  16.08075921548181 BM25


Formal Verification of Parallel Programs
Formal Verification of PARALLEL Programs Two formal models FOR PARALLEL computationare presented : an abstract conceptual model and a parallel-program model A special case of the assertions method , which is called PARALLEL place assertions , is shown to beincomplete PARALLEL program , correctness , verification , assertions , deadlock , mutual exclusion , Petrinet 

CA760702 JB January 4, 1978  1:20 PM


--------------------------------------------------------------
10 Q0 CACM-1367 21  16.045184830455952 BM25


Character Structure and Character Parity Sensefor Parallel-by-Bit Data Communication in ASCII* (Proposed American Standard)
Character Structure and Character Parity Sensefor Parallel-by-Bit Data Communication in ASCII* ( Proposed American Standard ) 

CA660912 JB March 2, 1978  4:26 PM


--------------------------------------------------------------
10 Q0 CACM-1468 22  15.668798272057474 BM25


Syntax-Directed Interpretation of Classes of Pictures
A descriptive scheme FOR classes of pictures basedon labeling techniques using PARALLEL processing algorithms was proposed by the author some years ago The PARALLEL processingsimulator , originally written FOR an IBM 7094system , has now been rewritten FOR a CDC 3600 system A partial generative grammar FOR '' handwritten '' English letters is given , as are also a few computer-generated outputs using this grammarand the PARALLEL processing simulator mentioned earlier 

CA660304 JB March 3, 1978  1:56 PM


--------------------------------------------------------------
10 Q0 CACM-2865 23  15.646725818930966 BM25


Verifying Properties of Parallel Programs: An Axiomatic Approach
Verifying Properties of PARALLEL Programs : An Axiomatic Approach An axiomatic method FOR proving a numberof properties of PARALLEL programs is presented A crucial axiom provides FOR the use of auxiliary variables , which are added to a PARALLEL program as an aid to proving it correct 

CA760506 JB January 4, 1978  3:23 PM


--------------------------------------------------------------
10 Q0 CACM-2401 24  15.096421418414705 BM25


On Shrinking Binary Picture Patterns
A PARALLEL processing algorithm FOR shrinkingbinary patterns to obtain single isolated elements , one FOR each pattern , is presented The principal features of this method are the very smallwindow employed ( two-by-two elements ) , the PARALLEL nature of the process , and the possibility of shrinkingany pattern , regardless of the complexity of its configuration counting binary patterns , shrinking , parallelprocessing , multiple connected pictures 

CA720102 JB February 1, 1978  9:43 AM


--------------------------------------------------------------
10 Q0 CACM-2342 25  14.989429495355743 BM25


Interference Between Communicating Parallel Processes
Interference Between Communicating PARALLEL Processes Various kinds of interference between communicatingparallel processes have been examined by Dijkstra , Knuth , and others Solutions have been givenfor the mutual exclusion problem and associated subproblems , in the form of PARALLEL programs , and informalproofs of correctness have been given FOR these solutions In this paper a system of parallelprocesses is regarded as a machine which proceeds from one state S ( i concurrent programming control , cooperating processes , formal programs , interference , mutual exclusion , operating systems , PARALLEL processes 

CA720603 JB January 31, 1978  8:44 AM


--------------------------------------------------------------
10 Q0 CACM-0141 26  14.936645779694967 BM25


Some Thoughts on Parallel Processing
Some Thoughts on PARALLEL Processing 

CA601007 JB March 20, 1978  8:16 PM


--------------------------------------------------------------
10 Q0 CACM-2557 27  14.878552311100602 BM25


On the Time Required for a Sequence of Matrix Products
The minimum time required to evaluatesuch products on ordinary serial computers as well as PARALLEL computers is discussed matrix expressions , matrix multiplication , operationminimization , PARALLEL machine , time minimization 

CA730104 JB January 24, 1978  4:41 PM


--------------------------------------------------------------
10 Q0 CACM-0392 28  14.706989194236586 BM25


Comment on A Paper on Parallel Processing
Comment on A Paper on PARALLEL Processing 

CA610206 JB March 17, 1978  12:58 AM


--------------------------------------------------------------
10 Q0 CACM-2182 29  13.955965312629333 BM25


Interrupt Driven Programming
interrupts , supervisors , monitors , debugging , parallelprocessing , associative memories , microprogramming 

CA710608 JB February 3, 1978  9:49 AM


--------------------------------------------------------------
10 Q0 CACM-2195 30  13.764381477221301 BM25


On the Optimal Detection of Curves in Noisy Pictures
The method described is suitable FOR PARALLEL processing because the operations relative to eachstate can be computed in PARALLEL , and the numberof stages is equal to the length N of the curves ( orto log2 N if the approximate method is used ) picture processing , picture recognition , picturedescription , curve detection , line detection , edge detection , optimal detection , heuristic methods , global recognition , PARALLEL processing , dynamic programming , interaction graph , secondary optimization problem 

CA710504 JB February 3, 1978  2:49 PM


--------------------------------------------------------------
10 Q0 CACM-1569 31  13.725322709461764 BM25


Implementing Phrase-Structure Productions in PL/I
A method is described FOR implementing the productionsof a context-free phrase structure grammar in a PL/I procedure whose structure and statements parallelthe structure and notation of the grammar 

CA670704 JB February 28, 1978  9:01 AM


--------------------------------------------------------------
10 Q0 CACM-1536 32  13.486000088216496 BM25


Dynamic Computation of Derivatives
Evaluation of a function and derivative proceed inparallel , as in Wengert 's procedure , but with the `` imaginary '' parts of variables declared complex bearingthe values of the derivatives of the real parts Dynamic COMPUTATION of Derivatives It is shown how Wengert 's procedure FOR computationof derivatives can be implemented conveniently by use of compiler-generated complex addition , subtraction , and linkage to complex arithmetic subroutines 

CA670908 JB February 27, 1978  3:11 PM


--------------------------------------------------------------
10 Q0 CACM-2175 33  13.435381538622542 BM25


Subexpression Ordering in the Execution of Arithmetic Expressions
Depending on the hardware environment in which the expression isto be executed , these subexpressions can be evaluated in serials , in PARALLEL , or in a combination of thesemodes If thenumber of subexpressions which can be executed in PARALLEL exceeds the number of available processors , then execution of some of these subexpressions must be postponed PARALLEL processing , cache , arithmetic expressions , subexpression ordering , computational trees , compilers 

CA710707 JB February 2, 1978  4:49 PM


--------------------------------------------------------------
10 Q0 CACM-1747 34  13.384498008913654 BM25


Three Criteria for Designing Computing Systems to Facilitate Debugging
Examples of applicationsof the criteria concern the reading of a time-of-day clock , the synchronization of parallelprocesses , protection in multiprogrammed systems , and the assignment of capability indexes computer design , computer design criteria , computersystems , computer systems design , input equipment , input equipment design , operating systems , operatingsystems design , multiprogramming , multiprogrammed systems , multiprogrammed system design , virtual computers , programming LANGUAGES , programming language design , program semantics , programming language semantics , determinism , reproducibility , repeatability , deterministic computers , protection , memory protection , information security , information privacy , computing reliability , debugging , program debugging , program testing , PARALLEL processing , PARALLEL programming , multiprocessing 

CA680509 JB February 23, 1978  9:06 AM


--------------------------------------------------------------
10 Q0 CACM-2952 35  13.370719955479235 BM25


Functions Realizable with Word-Parallel Logicaland Two's-Complement Addition Instructions
Functions Realizable with Word-Parallel Logicaland Two's-Complement Addition Instructions 

CA770611 JB December 28, 1977  12:45 PM


--------------------------------------------------------------
10 Q0 CACM-2570 36  13.273569881596675 BM25


A Comparison of List Schedules for Parallel Processing Systems
A Comparison of List Schedules FOR PARALLEL Processing Systems PARALLEL processing , precedence graphs , scheduling , list scheduling , optimization , dynamic programming 

CA741204 JB January 16, 1978  9:42 AM


--------------------------------------------------------------
10 Q0 CACM-3073 37  13.262944966187533 BM25


Communicating Sequential Processes
This paper suggests that input and output arebasic primitives of programming and that PARALLEL composition of communicating sequential processes isa fundamental program structuring method Programming , programming LANGUAGES , programming primitives , program structures , PARALLEL programming , concurrency , input , output , guarded commands , nondeterminacy , coroutines , procedures , multiple entries , multiple exits , classes , data representations , recursion , conditional critical regions , monitors , iterative arrays 

CA780805 DH February 7, 1979  10:07 AM


--------------------------------------------------------------
10 Q0 CACM-1846 38  13.108784965573982 BM25


On Simulating Networks of Parallel Processesin Which Simultaneous Events May Occur
On Simulating Networks of PARALLEL Processesin Which Simultaneous Events May Occur The technique will either find a method ofsimulating the PARALLEL events or report that none can be found simulation , PARALLEL processes , simultaneous events , picture processing , computer system simulation In some of the latter cases it is shownto be possible to find a solution by extending the information available to the solution technique , butin many cases the technique becomes computationally unfeasible when the additional information is provided 

CA690910 JB February 15, 1978  4:21 PM


--------------------------------------------------------------
10 Q0 CACM-1008 39  12.57267124917754 BM25


Scheduling Meetings with a Computer
The techniquedeveloped FOR FASEB can be applied to schedule any meeting with PARALLEL sessions 

CA640903 JB March 9, 1978  6:16 PM


--------------------------------------------------------------
10 Q0 CACM-2433 40  12.548830835829985 BM25


Control Structures in Illiac IV Fortran
This languageprovides a means of expressing data and control structures suitable FOR exploiting ILLIAC IV parallelism Language structures to utilize this storage method and express PARALLEL algorithms are described array processing , parallelism detection , explicitparallelism , array allocation , PARALLEL control structures , ILLIAC IV Fortran 

CA731007 JB January 20, 1978  11:30 AM


--------------------------------------------------------------
10 Q0 CACM-2080 41  12.423081359498198 BM25


The Nucleus of a Multiprogramming System
The systemnucleus simulates an environment in which program execution and input/outputare handled uniformly as PARALLEL , cooperating processes multiprogramming , operating systems , PARALLEL processes , process concept , process communication , message buffering , processhierarchy , process creation , process removal 

CA700404 JB February 13, 1978  3:10 PM


--------------------------------------------------------------
10 Q0 CACM-2838 42  12.226566241864827 BM25


Analysis of an Algorithm for Real Time Garbage Collection
A real time garbage collection system avoidssuspending the operations of a list processor FOR the long times that garbage collection normally requiresby performing garbage collection on a second processor in PARALLEL with list processing operations , or on a single processor time-shared with them garbage collection , storage reclamation , listprocessing , Lisp , time-sharing , multiprocessing , PARALLEL processing , real time , data structures , analysis of algorithms 

CA760901 JB January 4, 1978  9:57 AM


--------------------------------------------------------------
10 Q0 CACM-2727 43  11.797172395778304 BM25


Multiple Byte Processing with Full-Word Instructions
A method is described which allows parallelprocessing of packed data items using only ordinary full-word computer instructions , even though the processingrequires operations whose execution is contingent upon the value of a datum 

CA750808 JB January 6, 1978  4:21 PM


--------------------------------------------------------------
10 Q0 CACM-1471 44  11.41123527799144 BM25


Programming Semantics for Multiprogrammed computations
These meta-instructions relate to PARALLEL processing , protection of separate computations , programdebugging , and the sharing among users of memory segments and other computing objects , the names of whichare hierarchically structured Programming Semantics FOR Multiprogrammed computations 

CA660301 JB March 3, 1978  2:25 PM


--------------------------------------------------------------
10 Q0 CACM-2289 45  11.190112328631695 BM25


Cellular Arrays for the Solution of Graph Problems
The chief computational advantage offered by cellular arrays is the improvement in speedachieved by virtue of the possibilities FOR PARALLEL processing A major challengein the effective use of cellular arrays FOR the solution of graph problems is the determination of algorithmsthat exploit the possibilities FOR parallelism , especially FOR problems whose solutions appear to be inherentlyserial In particular , several parallelized algorithms are presented FOR the solution of certainspanning tree , distance , and path problems , with direct applications to wire routing , PERT chart analysis , and the analysis of many types of networks graph theory , cellular logic-in-memory arrays , PARALLEL processing , special purpose computers , algorithms FOR distance and spanning tree problems These algorithms exhibit a COMPUTATION time that inmany cases grows at a rate not exceeding log2 n , where n is the number of nodes in the graph 

CA720901 JB January 30, 1978  9:16 AM


--------------------------------------------------------------
10 Q0 CACM-3044 46  11.182361739524511 BM25


A Note on Conditional Expressions
PARALLEL evaluation , suspending cons , Lisp , conditionalforms , if-then-else , ambiguous function , infinite structures 

CA781107 DH January 26, 1979  10:44 AM 


--------------------------------------------------------------
10 Q0 CACM-1200 47  11.135349895173205 BM25


On Reversible Subroutines and Computers that Run Backwards
Since these properties are analogous to certain matrixoperations , a PARALLEL nomenclature is suggested FOR their classification 

CA650906 JB March 6, 19787:33 PM


--------------------------------------------------------------
10 Q0 CACM-1603 48  10.896185144939775 BM25


A Multiprogramming Monitor for Small Machines
The software relieves the user program from the details of input/output timing , buffering , and task scheduling and provides PARALLEL processing capability 

CA670503 JB February 28, 1978  10:57 AM


--------------------------------------------------------------
10 Q0 CACM-2740 49  10.68793815814108 BM25


A Large Semaphore Based Operating System
The number of PARALLEL processes is carefullyjustified , and the various semaphore constructions are explained cooperating processes , operating system , semaphores , semaphore applications , queue semaphores , deadlock , deadly embrace , hierarchical structuring , multiprogramming , operating system structure , asynchronous structuring , buffering , PARALLEL processes , synchronizingprimitives , reentrant code , RC 4000 , project management , time schedule , debugging , project planning , project scheduling , reliability , program proving , coroutines , correctness , program maintenance , software paging 

CA750702 JB January 9, 1978  10:32 AM


--------------------------------------------------------------
10 Q0 CACM-1613 50  10.559257021405742 BM25


One-Pass Compilation of Arithmetic Expressions for a Parallel Processor
One-Pass Compilation of Arithmetic Expressions FOR a PARALLEL Processor Under the assumption that a processor may havea multiplicity of arithmetic units , a compiler FOR such a processor should produce object code to takeadvantage of possible parallelism of operation A technique is presented here FOR compiling arithmetic expressions into structures that can beevaluated with a high degree of parallelism 

CA670402 JB February 28, 1978  11:36 AM


--------------------------------------------------------------
10 Q0 CACM-1554 51  10.543839490519654 BM25


A Computer Technique for Displaying n-Dimensional Hyperobjects
A digital computer and automatic plotter havebeen used to generate three-dimensional stereoscopic movies of the three-dimensional PARALLEL and perspectiveprojections of four-dimensional hyperobjects rotating in four-dimensional space 

CA670801 JB February 27, 1978  4:48 PM


--------------------------------------------------------------
10 Q0 CACM-1957 52  10.293007925885206 BM25


The List Set Generator: A Construct for Evaluating Set Expressions
Theefficiency derives from evaluating the expression as a whole andin PARALLEL , rather than evaluating subexpressions andthen using those sets to arrive at the final result 

CA701206 JB February 9, 1978  3:23 PM


--------------------------------------------------------------
10 Q0 CACM-0320 53  10.12077107008931 BM25


Logic-Structure Tables
Logic tables are two-dimensional innature , enabling us to fully express and consider both the sequential and PARALLEL aspects of logic 

CA610605 JB March 16, 1978  10:40 PM


--------------------------------------------------------------
10 Q0 CACM-1380 54  10.064585011949482 BM25


SIMULA-an ALGOL-Based Simulation Language
SIMULA is an extension of ALGOL 60 in which the most important new conceptsis that of quasi-parallel processing 

CA660907 JB March 2, 1978  6:21 PM


--------------------------------------------------------------
10 Q0 CACM-1959 55  9.923271298658207 BM25


An Interrupt Based Organization for Management Information Systems
management information systems , integrated data processing , supervisors , interrupts monitoring systems , supervisorysystems , interrupt scheduling , PARALLEL processing 

CA701204 JB February 9, 1978  3:46 PM


--------------------------------------------------------------
10 Q0 CACM-2514 56  9.866172741481865 BM25


An Array Grammar Programming System
The user can control the ruleselection procedure in a derivation or parse , using weighted programming matrices ; he also has a choiceof instance selection schemes ( raster , random , PARALLEL ) Examples are given involving array languagesconsisting of simple geometrical patterns , as well as a language of `` neuron pictures 

CA730506 JB January 23, 1978  4:49 PM


--------------------------------------------------------------
10 Q0 CACM-2060 57  9.772109967085811 BM25


GEDANKEN-A Simple Typeless Language Based on thePrinciple of Completeness and the Reference Concept
The existence of label variables permits the construction of coroutines , quasi-parallel processes , and other unorthodox control mechanisms programming language , data structure , reference , assignment , coroutine , quasi-parallel process , typeless language , applicative language , lambda calculus , list processing , nondeterministic algorithm 

CA700506 JB February 13, 1978  1:43 PM


--------------------------------------------------------------
10 Q0 CACM-2898 58  9.733698236891492 BM25


A Conceptual Framework for a Nonprocedural Programming Language
PARALLEL programming , descriptive programming , nonprocedural programming , definitional language , data flow programming , applicative programming 

CA771202 JB February 1, 1980  4:05 AM


--------------------------------------------------------------
10 Q0 CACM-3175 59  9.700625008489212 BM25


Breaking Substitution Ciphers Using a Relaxation Algorithm
These probabilities are updated in PARALLEL FOR allcode letters , using joint letter probabilities 

CA791103 DB January 23, 1980  11:15 AM


--------------------------------------------------------------
10 Q0 CACM-2114 60  9.489813437496114 BM25


A Formal System for Information Retrieval from Files
attribute-value pair , index , keyword , record , record address , K-pointer , K-list , file , directory , generalized filestructure , inverted file , index-sequential-file , multilist file , description , file search , directory search , serial processing oflists , prime keyword , PARALLEL processing of lists 

CA700201 JB February 14, 1978  1:04 PM


--------------------------------------------------------------
10 Q0 CACM-2376 61  9.44874587822524 BM25


Synchronization of Communicating Processes
PARALLEL programming , multiprogramming , program correctness , process communication , process scheduling 

CA720305 JB January 31, 1978  2:44 PM


--------------------------------------------------------------
10 Q0 CACM-1341 62  9.063267071188646 BM25


Levels of Computer Systems
The continued use of such a structure raises questions about its effectson the usefulness of future systems , particularly with regard to such trends as time sharing , parallelprogramming , and , eventually , systems which learn 

CA661208 JB March 2, 1978  2:29 PM


--------------------------------------------------------------
10 Q0 CACM-1960 63  8.812759980777917 BM25


Process Management and Resource Sharing in the Multiaccess System ESOPE
The main features of the systeminclude the ability given to any user to schedule his own parallelprocesses using system primitive operations , the file-memory relationship , and the allocation-scheduling policy , which dynamicallytakes into account recent information about user behavior 

CA701203 JB February 9, 1978  4:02 PM


--------------------------------------------------------------
10 Q0 CACM-2723 64  8.612869062998401 BM25


Multiprocessing Compactifying Garbage Collection
garbage collection , storage reclamation , reclaimer , storage allocation , multiprocessing , synchronization , semaphores , PARALLEL processing , compactification , relocation , LISP , list processing , free storage , pointers , data structures , gc processor 

CA750901 JB January 6, 1978  3:39 PM


--------------------------------------------------------------
10 Q0 CACM-1325 65  8.593413766106114 BM25


Remote, On-Line, Real-time Computer Diagnosisof the Clinical Electrocardiogram
Currentattempts by the authors to extend the diagnostic capabilities of the present system are particularly concernedwith increasing the fidelity of the adaptive matched filters , the development of three dimensional pattern analysis , the analysis of PARALLEL electrocardiographer-computer diagnostic interaction , and a study of the possibilityof introducing major , tree-like branching decisions early in the diagnostic process 

CA650112 JB March 8, 1978  2:27 PM


--------------------------------------------------------------
10 Q0 CACM-1409 66  8.474010382540435 BM25


NEBULA: A Digital Computer Using a 20 Mc Glass Delay Line Memory
The arithmetic unit has a command structure similarto large PARALLEL machines , and uses flip-flop arithmetic and control registers throughout 

CA660705 JB March 2, 1978  9:35 PM


--------------------------------------------------------------
10 Q0 CACM-2515 67  8.460222861928203 BM25


Minimal Event-Node Network of Project Precedence Relations
A procedure FOR constructing a minimal event-nodenetwork to represent a set of precedence relations without PARALLEL activities is presented 

CA730505 JB January 24, 1978  8:42 AM


--------------------------------------------------------------
10 Q0 CACM-1854 68  8.231365510651827 BM25


On Multiprogramming, Machine Coding, and Computer Organization
The scheme includes a set of basic instructions FOR the generation , termination , and synchronizationof PARALLEL processes multiprogramming , parallelism , interrupt , input-output , computer organization , file handling , PL360 

CA690901 JB February 15, 1978  5:14 PM


--------------------------------------------------------------
10 Q0 CACM-1928 69  8.010002881335787 BM25


Exclusive Simulation of Activity in Digital Networks
simulation , logical simulation , digital simulation , large systems simulation , network structures , scheduling , queuing , simultaneous activities , PARALLEL events 

CA690210 JB February 20, 1978  9:58 AM


--------------------------------------------------------------
10 Q0 CACM-2497 70  7.50107355632792 BM25


Synchronizing Processors with Memory-Content-Generated Interrupts
interrupts , supervisors , monitors , debugging , parallelprocessing , associative memories , microprogramming 

CA730603 JB January 23, 1978  3:29 PM


--------------------------------------------------------------
10 Q0 CACM-2967 71  7.136193471445639 BM25


A Comparison of Hardware and Software AssociativeMemories in the Context of Computer Graphics
associative memory , associative processor , content-addressablememory , graphics , information retrieval , data structures , software evaluation , hardware evaluation , PARALLEL processing , database management 

CA770505 JB December 29, 1977  2:07 AM


--------------------------------------------------------------
10 Q0 CACM-2692 72  6.27152174946153 BM25


Reentrant Polygon Clipping
The two additional planes PARALLEL to the projectionscreen serve to limit the range of depth preserved through the projection This method is ideal FOR subsequent hidden-surface computations 

CA740107 JB January 18, 1978  2:04 PM


--------------------------------------------------------------
10 Q0 CACM-0034 73  5.166249078597159 BM25


Tables for Automatic Computation
Tables FOR Automatic COMPUTATION 

CA580102 JB March 22, 1978  9:26 PM


--------------------------------------------------------------
10 Q0 CACM-0035 74  5.047099524488663 BM25


A Machine Method for Square-Root Computation
A Machine Method FOR Square-Root COMPUTATION 

CA580101 JB March 22, 1978  9:27 PM


--------------------------------------------------------------
10 Q0 CACM-1411 75  4.976626366633242 BM25


Comparison of Several Algorithms for Computationof Means, Standard Deviations and Correlation Coefficients
Comparison of Several Algorithms FOR Computationof Means , Standard Deviations and Correlation Coefficients Several algorithms FOR COMPUTATION of basicstatistics are compared by their performance on systematically generated test data FOR each statistic , the algorithmincluded the usual computing formulas , correction due to an accumulated error term , and a recursive computationof the current value of the statistic 

CA660703 JB March 6, 1978  2:54 PM


--------------------------------------------------------------
10 Q0 CACM-1708 76  4.893282874295575 BM25


A Note on the Efficiency of a LISP Computation in a Paged Machine
A Note on the Efficiency of a LISP COMPUTATION in a Paged Machine storage management , list processor implementation , LISP , paging , secondary storage utilization , efficiency of paged COMPUTATION 

CA680806 JB February 22, 1978 10:45 AM


--------------------------------------------------------------
10 Q0 CACM-3147 77  4.562932534089418 BM25


A Model for Automating File and Program Design in Business Application Systems
The model views file and program design as a problemof systematically coordinating the configurations of datasets andcomputations It uses a straight forward search technique todetermine aggregations of computations , aggregations of datasets , device , organization , and key order FOR each data set , key order FOR each COMPUTATION , and access method FOR each dataset-computationpair Although computational results are presented FOR a sampleproblem involving 54 computations and 49 datasets , the main point ofthe paper is that the underlying model works computationally and is simple enough to be adapted to many file design situations 

CA790603 DH August 21, 1979  4:25 PM


--------------------------------------------------------------
10 Q0 CACM-1819 78  4.556675269166616 BM25


Complex Error Function (Algorithm 363 [S15])
error function FOR complex argument , Voigt function , Laplace continued fraction , Gauss-Hermite quadrature , recursive COMPUTATION 

CA691111 JB February 15, 1978  12:13 PM


--------------------------------------------------------------
10 Q0 CACM-2135 79  4.543617376375546 BM25


Rapid Computation of General InterpolationFormulas and Mechanical Quadrature Rules
Rapid COMPUTATION of General InterpolationFormulas and Mechanical Quadrature Rules Algorithms are developed FOR rapid COMPUTATION of L ( Q ) FOR a wide class ofselections of Q which includes the Lagrangian and Hermitian rules as special cases 

CA711208 JB February 2, 1978  9:49 AM


--------------------------------------------------------------
10 Q0 CACM-3166 80  4.512872594024569 BM25


Computing Standard Deviations: Accuracy
Four algorithms FOR the numerical computationof the standard deviation of ( unweighted ) sampled dataare analyzed Two of the algorithms are well-known in the statisticaland computational literature ; the other two are new algorithmsspecifically intended FOR automatic COMPUTATION 

CA790907 DB January 16, 1980  4:23 PM


--------------------------------------------------------------
10 Q0 CACM-2824 81  4.46373127476674 BM25


An Improvement to Martin's Algorithm forComputation of Linear Precedence Functions
An Improvement to Martin 's Algorithm forComputation of Linear Precedence Functions 

CA761007 JB January 3, 1978  4:13 PM


--------------------------------------------------------------
10 Q0 CACM-1644 82  4.446501594873445 BM25


On the Computation of Least Squares Polynomials
On the COMPUTATION of Least Squares Polynomials Rounding error accumulated during digital computationof a least squares polynomial makes the computed polynomial only an approximation to the true leastsquare polynomial 

CA670111 JB February 28, 1978  4:24 PM


--------------------------------------------------------------
10 Q0 CACM-2340 83  4.434296522564498 BM25


A Boolean Matrix Method for the Computationof Linear Precedence Functions
A Boolean Matrix Method FOR the Computationof Linear Precedence Functions A modified version of Bell 's Boolean matrixmethod FOR the COMPUTATION of linear precedence functions associated with a conflict-free matrix ofprecedence relations is given 

CA720605 JB January 30, 1978  4:28 PM


--------------------------------------------------------------
10 Q0 CACM-2918 84  4.129782741929862 BM25


Multiprocessor Memory Organization and Memory Interference
Home memory organization is shown to be particularly suited to certain specializedcomputation problems as well as to possess advantages in terms of in terference and reliability forgeneral purpose COMPUTATION 

CA771008 JB December 27, 1977  10:28 AM


--------------------------------------------------------------
10 Q0 CACM-2081 85  4.127227686362951 BM25


Some Complete Calculi for Matrices
Algorithmsare given which use symbol manipulation of matrix expressions soas to find the forms best suited FOR COMPUTATION complete calculus , data structures , linearprogramming , matrix , matrix concatenation , matrix sequences , programming LANGUAGES , sequence operations , symbol manipulation 

CA700403 JB February 13, 1978  3:18 PM


--------------------------------------------------------------
10 Q0 CACM-2707 86  4.086672334827997 BM25


Backtrack Programming Techniques
Second , it is shown how the useof macros can considerably shorten the COMPUTATION time in many cases In particular , this technique has allowedthe solution of two previously open combinatorial problems , the COMPUTATION of new terms in a well-knownseries , and the substantial reduction in COMPUTATION time FOR the solution to another combinatorial problem 

CA751105 JB January 6, 1978  9:03 AM


--------------------------------------------------------------
10 Q0 CACM-1363 87  4.0595027854786085 BM25


A General Method of Systematic Interval Computationfor Numerical Integration of Initial Value Problems
A General Method of Systematic Interval Computationfor Numerical Integration of Initial Value Problems 

CA661004 JB March 2, 1978  4:05 PM


--------------------------------------------------------------
10 Q0 CACM-1696 88  4.043076467041309 BM25


An Algorithm for Identifying the Ergodic Subchainsand Transient States of a Stochastic Matrix
COMPUTATION times are investigated experimentallyand compared with those of another recently propose method 

CA680905 JB February 22, 1978  9:04 AM


--------------------------------------------------------------
10 Q0 CACM-1498 89  3.9770091445028504 BM25


The ALCOR Illinois 7090/7094 Post Mortem Dump
This technique provides an intelligible analysis of an unsuccessful computationprocess in terms of the original source program 

CA671209 JB February 26, 1978  2:18 PM


--------------------------------------------------------------
10 Q0 CACM-1010 90  3.97006199216345 BM25


A Multiuser Computation Facility for Education and Research
A Multiuser COMPUTATION Facility FOR Education and Research 

CA640901 JB March 9, 1978  6:22 PM


--------------------------------------------------------------
10 Q0 CACM-1934 91  3.944412208611296 BM25


On Arithmetic Expressions and Trees
A description is given of how a tree representing theevaluation of an arithmetic expression can be drawn in such a way that the number of accumulatorsneeded FOR the COMPUTATION can be represented in a straightforward manner This representation reducesthe choice of the best order of COMPUTATION to a specific problem under the theory of graphs 

CA690204 JB February 20, 1978  11:11 AM


--------------------------------------------------------------
10 Q0 CACM-2634 92  3.8998474987183096 BM25


An Evaluation of Statistical Software in the Social Sciences 
statistical COMPUTATION , statistical software , descriptive statistics , bivariate tables , Pearson correlation , regression , factor analysis , one-way analysis of variance 

CA740612 JB January 17, 1978  2:54 PM


--------------------------------------------------------------
10 Q0 CACM-1309 93  3.867900395557247 BM25


A Computer User-Oriented System
A computer language system has been developedwhich makes possible fast preparation of management reports , regardless of computational complexity or formatvariety Use of two special LANGUAGES , EXTRACT and MATRAN , permits selective extraction of any data subset , efficientprocessing through any computational sequence , and flexible presentation of results in either tabularor graphical form Matrix algebra is used as a fundamental vehicle FOR accomplishing both manipulation and COMPUTATION 

CA650215 JB March 7, 1978  10:51 PM


--------------------------------------------------------------
10 Q0 CACM-1933 94  3.8641437360442525 BM25


Coding the Lehmer Pseudo-random Number Generator
The COMPUTATION method isextendible to limited problems in modular arithmetic 

CA690205 JB February 20, 1978  11:07 AM


--------------------------------------------------------------
10 Q0 CACM-1474 95  3.8589922539991566 BM25


Tests of Probabilistic Models for Propagation of Roundoff Errors
In any prolonged COMPUTATION it is generallyassumed that the accumulated effect of roundoff errors is in some sense statistical 

CA660210 JB March 3, 1978  2:37 PM


--------------------------------------------------------------
10 Q0 CACM-2847 96  3.8589922539991566 BM25


Sampling from the Gamma Distribution on a Computer
FOR large shape parameter ( a ) ; the cost of COMPUTATION is proportional to ( a ) , whereas Wallace 's method is proportional to ( a ) 

CA760706 JB January 4, 1978  12:34 PM


--------------------------------------------------------------
10 Q0 CACM-2914 97  3.8322648411665137 BM25


Use of the LRU Stack Depth Distributionfor Simulation of Paging Behavior
Simple expressions FOR the COMPUTATION of both kinds of distributions are given 

CA771102 JB December 27, 1977  8:04 AM


--------------------------------------------------------------
10 Q0 CACM-3085 98  3.8315689341924877 BM25


An O(n) Algorithm for Determining a Near-OptimalComputation Order of Matrix Chain Products
An O ( n ) Algorithm FOR Determining a Near-OptimalComputation Order of Matrix Chain Products This paper discusses the COMPUTATION of matrixchain products of the form M1 x M2 x An O ( n ) algorithm to find an order of COMPUTATION whichtakes less than 25 percent longer than the optimal time Topt is also presented 

CA780703 DH February 8, 1979  2:46 PM


--------------------------------------------------------------
10 Q0 CACM-1199 99  3.811450547660108 BM25


A Computer Center Simulation Project
Today 's COMPUTATION centers are based on rapidlychanging technologies of hardware and software systems In this paper , a mathematical model of the Lockheed Central Computer Center is formulatedthat describes the operation of a COMPUTATION center in terms of information nets , decision processes , and control functions 

CA650907JB March 6, 1978  7:29 PM


--------------------------------------------------------------
10 Q0 CACM-2263 100  3.800454019051438 BM25


The Conversion of Limited-Entry Decision Tablesto Optimal and Near-Optimal Flowcharts: Two New Algorithms
( 1 ) The optimum-approaching algorithm will usually lead to better results than comparableexisting ones and will not require more , but usually less , COMPUTATION time ( 2 ) In general , thegreater COMPUTATION effort needed FOR applying the optimum-finding algorithm will not be justifiedby the small reduction in execution time obtained 

CA721106 JB January 27, 1978  2:10 PM


